diff -rupN xdg_puppy-0.7.6-9-orig/jwm-xdgmenu/jwm-xdgmenu.c xdg_puppy-0.7.6-9/jwm-xdgmenu/jwm-xdgmenu.c
--- xdg_puppy-0.7.6-9-orig/jwm-xdgmenu/jwm-xdgmenu.c	2022-02-24 21:02:10.059689993 +0200
+++ xdg_puppy-0.7.6-9/jwm-xdgmenu/jwm-xdgmenu.c	2022-02-25 03:35:24.503675651 +0200
@@ -22,7 +22,7 @@
  * Declarations
  */
 static void show_help();
-static void process_directory(GMenuTreeDirectory *directory, char *menheight);
+static void process_directory(GMenuTreeDirectory *directory, char *menheight, GHashTable *history);
 static void process_entry(GMenuTreeEntry *entry);
 static void process_separator(GMenuTreeSeparator *entry);
 char *menheight;
@@ -72,10 +72,13 @@ main (int argc, char **argv)
   }
   
   GMenuTree *menuTree = gmenu_tree_lookup (argv[1],  GMENU_TREE_FLAGS_NONE );
+  GHashTable *history = g_hash_table_new_full(g_str_hash, g_str_equal, g_free, NULL);
 
   GMenuTreeDirectory *rootDirectory = gmenu_tree_get_root_directory(menuTree);
 
-  process_directory(rootDirectory, menheight);
+  process_directory(rootDirectory, menheight, history);
+
+  g_hash_table_destroy(history);
 
   gmenu_tree_item_unref (rootDirectory);
 
@@ -106,7 +109,7 @@ show_help()
  * This function processes a directory entry and all it's child nodes
  */
 void
-process_directory(GMenuTreeDirectory *directory, char *menheight)
+process_directory(GMenuTreeDirectory *directory, char *menheight, GHashTable *history)
 {
 	int hasSeparator = 0, first = 1;
 	char *mheight = menheight;
@@ -117,6 +120,10 @@ process_directory(GMenuTreeDirectory *di
 
   GSList *l;
 
+  GMenuTreeEntry *entry;
+
+  const char *path;
+
   /* if the menu has no items, don't show an empty menu */
   for (l = entryList; l; l = l->next)
   {
@@ -154,7 +161,7 @@ start:
 				}
 				hasSeparator = 0;
 		  }
-			process_directory(GMENU_TREE_DIRECTORY(item),menheight);
+			process_directory(GMENU_TREE_DIRECTORY(item),menheight,history);
 			first = 0;
 			break;
 		case GMENU_TREE_ITEM_ENTRY:
@@ -166,8 +173,14 @@ start:
 				}
 				hasSeparator = 0;
 		  }
-			process_entry(GMENU_TREE_ENTRY(item));
-			first = 0;
+			entry = GMENU_TREE_ENTRY(item);
+			path = gmenu_tree_entry_get_desktop_file_path(entry);
+			if (!g_hash_table_lookup(history, path))
+			{
+				process_entry(entry);
+				first = 0;
+				g_hash_table_insert(history, g_strdup(path), (gpointer)1);
+			}
 			break;
 		case GMENU_TREE_ITEM_SEPARATOR:
 			hasSeparator = 1;
