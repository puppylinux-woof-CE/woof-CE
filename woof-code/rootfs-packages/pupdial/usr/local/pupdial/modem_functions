#!/bin/sh
# Functions for pupdial scripts

#talk to modem, wait for response, kill modem-stats if hung...
# $1: command  $2: device
#Used by gen_modem_init_string, modemtest & pupdial_init_hotpluggable.
chat_with_modem() {
	local ANSWERFILE="/tmp/answer.txt"
	local COMMAND=$1 DEVICE=$2
	rm -f $ANSWERFILE
	if which microcom &>/dev/null; then
		local MCTIMEOUT=200 #v2.0.1...
		[ -f "/var/lock/LCK..${DEVICE##*/}" ] \
		 && rm -f "/var/lock/LCK..${DEVICE##*/}"
		if ! echo -e "${COMMAND}\r" | microcom -t $MCTIMEOUT $DEVICE > $ANSWERFILE; then
			#When microcom fails, waiting and retrying succeeds.
			usleep 10
			echo -e "${COMMAND}\r" | microcom -t $MCTIMEOUT $DEVICE > $ANSWERFILE
		fi
		[ -s $ANSWERFILE ] && grep -q '^OK' $ANSWERFILE && return 0
	fi
	if which modem-stats &>/dev/null \
	  && ( [ ! -s $ANSWERFILE ] || ! grep -q '^OK' $ANSWERFILE ); then
		#hangs if modem unplugged or turned off (contrary to what docs say)...
		modem-stats -c $COMMAND $DEVICE > $ANSWERFILE 2>/dev/null &
		local MSPID=$! CNTLP=1
		while [ $CNTLP -le 7 ] ;do
			sleep 1
			busybox pidof modem-stats | grep -q -w "$MSPID" || break
			CNTLP=$(( $CNTLP + 1 ))
		done
		kill $MSPID 2>/dev/null
	elif which microcom &>/dev/null; then
		[ -f "/var/lock/LCK..${DEVICE##*/}" ] \
		 && rm -f "/var/lock/LCK..${DEVICE##*/}" #v2.0.1
		for MCTIMEOUT in 2000 5000 7000; do
			echo -e "${COMMAND}\r" | microcom -t $MCTIMEOUT $DEVICE > $ANSWERFILE \
			 && grep -q '^OK' $ANSWERFILE \
			 && break #v2.0.1
		done
	fi
	[ -s $ANSWERFILE ] && grep -q '^OK' $ANSWERFILE
	return $?
}
export -f chat_with_modem

#Set default initialization strings
#Used by modemtest & modemprobe_erase.
reset_to_default_func() {
 #modify [Dialer Defaults] only...
 echo -n "" > /tmp/wvdial.conf-reset
 local WVSECTION=0
 cat /etc/wvdial.conf |
 while read ONELINE
 do
  if [ "`echo -n "$ONELINE" | cut -c 1`" = "[" ];then
   WVSECTION=0
   [ "$ONELINE" = "[Dialer Defaults]" ] && WVSECTION=1
  fi
  if [ $WVSECTION -eq 1 ];then
   NEWONE="`echo -n "$ONELINE" | sed -e 's%^Init3 =.*%Init3 = %'  -e 's%^Init2 =.*%Init2 = ATZ%' -e 's%^Init1 =.*%Init1 = %'`"
   echo "$NEWONE" >> /tmp/wvdial.conf-reset
  else
   echo "$ONELINE" >> /tmp/wvdial.conf-reset
  fi
 done
 mv -f /tmp/wvdial.conf-reset /etc/wvdial.conf
}
export -f reset_to_default_func
