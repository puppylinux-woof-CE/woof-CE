#! /bin/bash
# shellcheck disable=SC1091 #Skip sourced checks.
# PGPRS 2.x: Common interface to Puppy Generic GPRS Modem Utility

#200622 (v3.0) Offer to disconnect existing connection; become current manager after setup; remove lock usage; move version & help options out of main loop; move etc gprs.conf; complete internationalization; resolve shellcheck warnings.

export VERSION='3.0'  #UPDATE this with each release!

export TEXTDOMAIN=pgprs
export OUTPUT_CHARSET=UTF-8
. gettext.sh

OPTION="$1"
case $(basename "$0") in
    pgprs-shell) OPTION="--setup" ;;
    pgprs-connect) OPTION="--connect" ;;
    pgprs) [ -z "$OPTION" ] && OPTION="--setup" ;;
esac
case "$OPTION" in
    -s|--setup|-c|--connect|-d|--disconnect) ;;
    -v|--version) echo "$VERSION"; exit ;;
    *) echo "$(gettext 'Usage: pgprs [option]')
 
$(gettext 'Manage 3G/GPRS network connections')

$(gettext 'Options'):
  -s, --setup       $(gettext 'Configure a GPRS connection (default)')
  -c, --connect     $(gettext 'Connect to a GPRS network')
  -d, --disconnect  $(gettext 'Disconnect from active GPRS network')
  -v, --version     $(gettext 'Display pgprs version')
  -h, --help        $(gettext 'Display this help and exit')
"; exit ;;
esac

[ -f /root/.config/gprs.conf ] \
  || echo -e "GPRSDEV=\nGPRSAPN=\nGPRSNBR=\nGPRSPIN=\nGPRSUSER=\nGPRSPAPONLY=" > /root/.config/gprs.conf
mkdir -p /tmp/.pgprs
export ICONLIB=/usr/local/lib/X11/pixmaps
if [ -f /usr/share/pixmaps/pgprs.svg ]; then
    export PGPRSICON=/usr/share/pixmaps/pgprs.svg
else
    export PGPRSICON=/usr/share/pixmaps/pgprs.png
fi

function disconnect_gprs {
    local GPRS_PPPD_PID
    local CONNECTED_DEVICE
    GPRS_PPPD_PID="$(cat /var/run/ppp-gprs.pid 2>/dev/null)"
    if [ -n "$GPRS_PPPD_PID" ]; then
# shellcheck disable=SC2034 # Variable used in gettext message
        CONNECTED_DEVICE="$(pgrep -ax 'pppd' | grep -w "^$GPRS_PPPD_PID" | grep -o '/dev/[^ ]*')"
        kill "$GPRS_PPPD_PID"
        sleep 0.1 #200607
        rm -f /var/run/ppp-gprs.pid
        gtkdialog-splash -timeout 10 -placement center -bg orange -text "$(eval_gettext "Modem device \$CONNECTED_DEVICE disconnected")"
    fi
}

while [ "$OPTION" ]; do
    OPT=$OPTION; OPTION=''
    case "$OPT" in
      -s|--setup)
        if pgrep -x 'pgprs' | grep -qwv "$$"; then #200622...
            Xdialog --center --wmclass pgprs --title "$(gettext 'Pgprs GPRS Setup')" --icon $ICONLIB/error.xpm --ok-label "$(gettext 'OK')" --msgbox "\n$(gettext 'PGPRS cannot start now because it is already active.')\n\n$(gettext 'Please use the active PGPRS session.')\n" 0 70
            exit
        fi
        /usr/local/pgprs/pgprs-setup
        STATUS=$? #200611...
        [ $STATUS -eq 2 ] && OPTION='--connect'
        [ $STATUS -eq 0 ] || [ $STATUS -eq 2 ] && which connectwizard_exec >/dev/null 2>&1 \
          && connectwizard_exec pgprs
        ;;
      -c|--connect)
        #If no setup in place, do it now...
        . /root/.config/gprs.conf
        if [ "$GPRSDEV" ] && [ "$GPRSNBR" ] && [ "$GPRSAPN" ]; then
            /usr/local/pgprs/pgprs-connect && OPTION='--setup' #0 = configure, 1 = done, 255 = abort
        else
            OPTION='--setup'
        fi
        ;;
      -d|--disconnect)
        if [ -s /var/run/ppp-gprs.pid ]; then
            disconnect_gprs
        fi
        ;;
    esac
done
exit 0
