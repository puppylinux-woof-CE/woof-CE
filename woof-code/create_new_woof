#!/bin/sh
#100916 added 4quirkybuild.

echo "This script makes a copy of the essential elements of the current directory"
echo "so that you have a brand new 'Woof', ready to build a new Puppy distro."
echo
echo "These directories already exist:"
find ../ -maxdepth 1 -type d -name woof\*
echo
echo "Type a postfix number or word for a new directory. For example,"
echo "if you type '1' here, then 'woof-1' will get created."
echo -n "Type postfix now: "
read postfixstr

mkdir ../woof-${postfixstr}
[ $? -ne 0 ] && exit

cp -a boot ../woof-${postfixstr}/
cp -a packages-templates ../woof-${postfixstr}/
cp -a rootfs-skeleton ../woof-${postfixstr}/
cp -a support ../woof-${postfixstr}/
cp -a _0func.sh ../woof-${postfixstr}/
cp -a 0setup ../woof-${postfixstr}/
cp -a 1download ../woof-${postfixstr}/
cp -a 2createpackages ../woof-${postfixstr}/
cp -a 3builddistro ../woof-${postfixstr}/
cp -a create_new_woof ../woof-${postfixstr}/
cp -a DISTRO_PKGS_SPECS* ../woof-${postfixstr}/
cp -a PKGS_MANAGEMENT ../woof-${postfixstr}/
cp -a DISTRO_PET_REPOS ../woof-${postfixstr}/
cp -a DISTRO_SPECS ../woof-${postfixstr}/
cp -a README.txt ../woof-${postfixstr}/
cp -a Packages-puppy* ../woof-${postfixstr}/
[ -f PKGS_HOMEPAGES ] && cp -a PKGS_HOMEPAGES ../woof-${postfixstr}/
cp -a woof_gui ../woof-${postfixstr}/
cp -a woof_gui_tabs ../woof-${postfixstr}/
cp -a DISTRO_COMPAT_REPOS* ../woof-${postfixstr}/
cp -a findwoofinstalledpkgs ../woof-${postfixstr}/
sync

cd ..
dir2tgz woof-${postfixstr}
sync

echo "...finished."
###END###
