<!DOCTYPE html>
<html>
<head>
	<title>root</title>
	<meta charset="utf-8">
	<link href="./manual.css" rel="stylesheet" type="text/css" />
</head>
<body>
	<div id="container">
		<h1>About root, spot and finn</h1>
		<p>
			This is a short explanation of why users run as the administrator (root) in Puppy Linux, and/or use the non-root spot and finn accounts.
		</p>
		<section>
			<h2>root, spot, finn</h2>
			<p>
				In a nutshell, root login gives you total access to everything, whereas a non-root login gives you restricted access (that is configurable for  each user by the administrator).<br>
				Puppy is not a multi-user system as are most other Linux distributions, in which there is a root login plus any number of non-root login accounts.<br>
				Puppy on the other-hand, has root, plus just two non-root logins, named spot and finn.
			</p>
			<section>
				<h2>root</h2>
				<p>
					There are two main objections to running as root: firstly, that you might accidentally do something dumb, such as delete important files, secondly that if someone gains access to your computer, either remotely via the Internet/network, or locally, they will be at root-level and able to do much more damage than if they gained access as a non-root user.
				</p>
				<section>
					<h3>Doing something dumb</h3>
					<p>
						In the case of accidentally wiping important files, which files are important to you? Your own personal files and data of course, which regardless of whether you are logged in as your non-root account, or logged-in as root, you are just as prone to doing the same dumb thing.<br>
						That is, your personal files, settings, applications, are all owned by the non-root user, and can just as easily be deleted by the non-root user as can be deleted by the administrator.<br>
						In other words, this argument against running as root is itself dumb. At least in respect to the safety of your own files.
					</p>
					<p>
						Where the "doing something dumb" argument is valid is in a multi-user system, where the administrator could accidentally delete or otherwise compromise another user's files. However, Puppy is not multi-user.
					</p>
					<p>
						With regard to system files, they can easily be restored, in fact Puppy makes this easy as the entire system is in one Squashfs file.
					</p>
				</section>
			</section>
			<section>
				<header class="logo-header">
					<img class="header-logo" alt="" src="../../../home/spot/spot.png">
					<h2>spot</h2>
				</header>
				<p>
					This brings us to 'spot', which is a classical name for a dog. But, spot is not a normal user, you don't login as user spot. Instead, you bootup in the normal way as the root user, but you can choose to run some Internet applications as the restricted user spot.<br>
					This means that you have unfettered access to your local system, all the benefits of root, no hassles with file/directory ownerships and permissions, no restrictions on access to all hardware.<br>
					But, you can run, for example, SeaMonkey (browser, Composer, mail&amp;news, IRC-chat suite), as spot. The home directory for spot is /home/spot, and SeaMonkey will only be able to (normally) edit/create/write files inside /home/spot.
				</p>
				<p>
					With spot, you have the best of both worlds. Freedom in your local system, a restricted user for Internet access.
				</p>
				<p>
					Run any application as spot with: <b>run-as-spot app [arguments]</b>
					<br>
					You can also create a script to automate this
				</p>
			</section>
			<section>
				<header class="logo-header">
					<img class="header-logo" alt="" src="finn96.png">
					<h2>finn</h2>
				</header>
				<p>
					finn is another name for a dog, and is a full non-root login account, as you would get in any other Linux distro. As with other distros, you would use 'su' or 'sudo' to perform administrator activities... most activities.
				</p>
				<p>
					<b>su:</b> become root... you need to enter the administrator (root) password
					<br>
					<b>sudo app</b>: run app as root, you need to enter the user password. The user must be listed in the sudoers file..
					<br>
					.. if you have trouble understanding this, make sure finn and root share the same password... (Login Manager)
				</p>
				<p>
					Use <b>Login Manager</b> to select finn as the default login account.
				</p>
			</section>
		</section>
		<section>
			<h2>Final note</h2>
			<p>
				Puppy is designed for people who know what they are doing and what they want, and they want to do it with the least hassles. They also want exclusive use of their computer, or maybe will share with a trusted person. If you want to put a small child in front of your computer and let them wreak havoc, Puppy is not recommended, but then, they could wreak havoc regardless of operating system. <br>
				At least with Puppy, you can rescue an old PC, install Puppy, and let him/her do whatever. It is affordable for each user to have their own separate hardware.
			</p>
		</section>
		<section>
			<h2>Links</h2>
			<p>
				FatDog64, a fork of Puppy created by "kirk" and "jamesbond", has since its inception run all network apps as user spot. Those guys have created an excellent web page that explains why running as root is safe (or not less-safe than running non-root):
			</p>
			<p>
				<a href="http://distro.ibiblio.org/fatdog/web/faqs/login.html">http://distro.ibiblio.org/fatdog/web/faqs/login.html</a>
			</p>
			<p>
				Some more relevant links:
			</p>
			<p>
				<div><a href="http://igurublog.wordpress.com/2010/01/16/fear-not-root/">http://igurublog.wordpress.com/2010/01/16/fear-not-root/</a></div>
				<div><a href="http://web.archive.org/web/20080604034010/grafpup.org/news/?page_id=243">http://web.archive.org/web/20080604034010/grafpup.org/news/?page_id=243</a></div>
			</p>
		</section>
		<footer>
			Regards,<br>
			Barry Kauler
			<div class="legal">(c) Copyright Barry Kauler 2013</div>
		</footer>
	</div>
</body>
</html>