#!/bin/bash
#updates wine menu entries and xdg desktop files
#optimizes wine file associations
#written by mistfire

if [ "$1" == "" ]; then
 xHOME="$HOME"
else
 xHOME="$1"
fi

if [ "$xHOME" == "/" ]; then
 exit
fi

#Dont run if X is not running
if [ "$(pidof X)" == "" ] && [ "$(pidof Xorg)" == "" ]; then
 exit
fi

#Dont run if wine app is running
if [ "$(pidof wineserver)" != "" ]; then
 exit
fi

WINEHOME=$xHOME/.wine

menucountfile="$xHOME/.config/wine-xdg-stats/menu-count"
mimecountfile="$xHOME/.config/wine-xdg-stats/mime-count"
assocountfile="$xHOME/.config/wine-xdg-stats/assoc-count"
optmcountfile="$xHOME/.config/wine-xdg-stats/optm-count"

if [ ! -e $xHOME/.config/wine-xdg-stats ]; then
 mkdir -p $xHOME/.config/wine-xdg-stats
fi

if  [ -e $menucountfile ]; then
 lastmenucount=$(cat "$menucountfile")
else
 lastmenucount=0
fi

if [ -e $mimecountfile ]; then
 lastmimecount=$(cat "$mimecountfile")
else
 lastmimecount=0
fi

if [ -e $assocountfile ]; then
 lastassocount=$(cat "$assocountfile")
else
 lastassocount=0
fi

if [ -e $optmcountfile ]; then
 lastoptmcount=$(cat "$optmcountfile")
else
 lastoptmcount=0
fi

make_wine_user_ctrl(){

echo '[Desktop Entry]
Type=Application
Name=Wine Add/Remove Program
Exec=wine uninstaller
Comment=Manage installed windows programs
Icon=wine.png
Categories=Utility' > $xHOME/.local/share/applications/user-wine-prg.desktop
chmod +x $xHOME/.local/share/applications/user-wine-prg.desktop

echo '[Desktop Entry]
Type=Application
Name=Wine Control Panel
Exec=wine control
Comment=Wine Control Panel
Icon=wine.png
Categories=Utility' > $xHOME/.local/share/applications/user-wine-panel.desktop
chmod +x $xHOME/.local/share/applications/user-wine-panel.desktop

echo '[Desktop Entry]
Type=Application
Name=Wine Command Prompt
Exec=wine start
Comment=Wine Command Prompt
Icon=wine.png
Categories=Utility' > $xHOME/.local/share/applications/user-wine-cmd.desktop
chmod +x $xHOME/.local/share/applications/user-wine-cmd.desktop

echo '[Desktop Entry]
Type=Application
Name=Wine Browser
Exec=wine iexplore
Comment=Wine Browser
Icon=wine.png
Categories=Internet;' > $xHOME/.local/share/applications/user-wine-iexplore.desktop		
chmod +x $xHOME/.local/share/applications/user-wine-iexplore.desktop
	
echo '[Desktop Entry]
Type=Application
Name=Wine Notepad
Exec=wine notepad
Comment=Wine Notepad
Icon=wine.png
Categories=Utility' > $xHOME/.local/share/applications/user-wine-notepad.desktop
chmod +x $xHOME/.local/share/applications/user-wine-notepad.desktop

echo '[Desktop Entry]
Type=Application
Name=Wine Task Manager
Exec=wine taskmgr
Comment=Manage running windows program
Icon=wine.png
Categories=Utility;System' > $xHOME/.local/share/applications/user-wine-taskmgr.desktop
chmod +x $xHOME/.local/share/applications/user-wine-taskmgr.desktop	
}

update_association(){
 
 if [ $lastassocount -ne $newassocount ]; then
  rm -f $xHOME/.local/share/applications/mimeinfo.cache
  update-desktop-database $xHOME/.local/share/applications
  echo $newassocount > "$assocountfile"
 fi
 
 newmimecount=$(find $xHOME/.local/share/mime -name "*.xml" -type f | wc -l) 

 if [ $lastmimecount -ne $newmimecount ]; then
  update-mime-database $xHOME/.local/share/mime
  echo $newmimecount > "$mimecountfile"
 fi	
}

delete_menu_icons(){

for winedf in $(find "$xHOME/.local/share/applications/wine/Programs/" -name "*.desktop" -type f | sed -e "s#\ #%20#g")
do
 winedf="$(echo "$winedf" | sed -e "s#%20#\ #g")"
 icon3="$(cat "$winedf" | grep "Icon=" | cut -f 2 -d '=')"
 rm -f $xHOME/.local/share/icons/*/*/*/$icon3.*
done

for winedf in $(find "$xHOME/Desktop/" -name "*.desktop" -type f | sed -e "s#\ #%20#g")
do
 winedf="$(echo "$winedf" | sed -e "s#%20#\ #g")"
 if [ "$(cat "$winedf" | grep "env WINEPREFIX=")" != "" ]; then
  icon3="$(cat "$winedf" | grep "Icon=" | cut -f 2 -d '=')"
  rm -f $xHOME/.local/share/icons/*/*/*/$icon3.*
 fi
done	
	
}

delete_desktop_files(){
 rm -rf $xHOME/.local/share/applications/wine
 rm -f $xHOME/.local/share/applications/user-wine-*.desktop
 rm -f $xHOME/.local/share/desktop-directories/wine-*.directory
 rm -f $xHOME/.config/menus/applications-merged/*wine*
 
for winedf in $(find "$xHOME/Desktop/" -name "*.desktop" -type f | sed -e "s#\ #%20#g")
do
 winedf="$(echo "$winedf" | sed -e "s#%20#\ #g")"
 if [ "$(cat "$winedf" | grep "env WINEPREFIX=")" != "" ]; then
  rm -f "$winedf"
 fi
done	

 update-desktop-database $xHOME/.local/share/applications
 update-mime-database $xHOME/.local/share/mime
 
 newmimecount=$(find $xHOME/.local/share/mime -name "*.xml" -type f | wc -l) 
 
 echo $newmimecount > "$mimecountfile"
 echo 0 > "$assocountfile"
 echo 0 > "$menucountfile"
 		
}

selective_remove_desktop_files(){
 for assocfile in $(ls -1 $xHOME/.local/share/applications/wine-extension-*.desktop 2>/dev/null | tr '\n' ' ')
 do
  if [ "$(cat "$assocfile" | grep "$WINEHOME")" != "" ]; then
    rm -f "$assocfile"
  fi
 done
 update_association
}

check_association_file(){
 for assocfile in $(ls -1 $xHOME/.local/share/wine-extensions/wine-extension-*.desktop 2>/dev/null | tr '\n' ' ')
 do
 
  ext1="$(basename $assocfile .desktop | cut -f 3 -d '-')"
  icon3="$(cat "$assocfile" | grep "Icon=" | cut -f 2 -d '=')"
 
  if [ $(grep "FileOpenAssociations" $WINEHOME/user.reg | grep ".$ext1" | wc -l) -eq 0 ]; then
   echo "Deleting file association $assocfile ..."
   rm -f "$assocfile"
   echo "Deleting mime $assocfile ..."
   rm -f $xHOME/.local/share/mime/packages/x-wine-extension-${ext1}.xml
   #echo "Deleting icon $assocfile ..."
   #rm -f $xHOME/.local/share/icons/*/*/*/application-x-wine-extension-${ext1}.*
   
   if [ "$icon3" != "" ]; then
    rm -f $xHOME/.local/share/icons/*/*/*/$icon3.*
   fi  
  
  fi
 done
}

check_wine_entries(){
for fld in $(ls -1 $xHOME/.local/share/desktop-directories/wine-Programs-*.directory 2>/dev/null | sed -e "s#\ #%20#g")
do
 fldname="$(basename $fld .directory | sed -e "s#wine-Programs-##g" -e "s#%20#\ #g")"
 if [ $(find $WINEHOME/drive_c/users -name "$fldname" -type d | wc -l) -eq 0 ]; then
  rm -f "$xHOME/.local/share/desktop-directories/wine-Programs-${fldname}.directory"
 fi
done

winestr="s#WINEPREFIX=\\\"$(echo $WINEHOME | sed -e "s#\/\$##g" -e "s#\/#\\\/#g")\\\"\ wine\ ##g"
for winedf in $(find "$xHOME/.local/share/applications/wine/Programs/" -name "*.desktop" -type f | sed -e "s#\ #%20#g")
do
 winedf="$(echo "$winedf" | sed -e "s#%20#\ #g")"
 menulnk="$(cat "$winedf" | grep "Exec=" | sed  -e "s#Exec=env ##g" -e "$winestr" -e "s#\\\\##g" -e "s#C:windowscommandstart.exe##g" -e "s# \/Unix ##g")"
 bname2="$(basename "$menulnk" .lnk)"
 icon3="$(cat "$winedf" | grep "Icon=" | cut -f 2 -d '=')"
 if [ ! -e "$menulnk" ]; then
  echo "Deleting $winedf"
  rm -f "$winedf" 
  echo "Deleting menu icon $icon3"
  rm -f $xHOME/.local/share/icons/*/*/*/$icon3.*
  for df3 in $(find "$xHOME/.config/menus/applications-merged/" -name "*-${bname2}.menu" -type f | sed -e "s#\ #%20#g")
  do
   winedf="$(echo "$df3" | sed -e "s#%20#\ #g")"
   echo "Deleting $winedf ..."
   rm -f "$winedf"
  done
 fi
done

winestr="s#WINEPREFIX=\\\"$(echo $WINEHOME | sed -e "s#\/\$##g" -e "s#\/#\\\/#g")\\\"\ wine\ ##g"
for winedf in $(find "$xHOME/Desktop/" -name "*.desktop" -type f | sed -e "s#\ #%20#g")
do
 winedf="$(echo "$winedf" | sed -e "s#%20#\ #g")"
 if [ "$(cat "$winedf" | grep "env WINEPREFIX=")" != "" ]; then
  icon3="$(cat "$winedf" | grep "Icon=" | cut -f 2 -d '=')" 
  menulnk="$(cat "$winedf" | grep "Exec=" | sed  -e "s#Exec=env ##g" -e "$winestr" -e "s#\\\\##g" -e "s#C:windowscommandstart.exe##g" -e "s# \/Unix ##g")"
  if [ ! -e "$menulnk" ]; then
   echo "Deleting $winedf"
   rm -f "$winedf"
   echo "Deleting menu icon $icon3"
   rm -f $xHOME/.local/share/icons/*/*/*/$icon3.*
  fi
 fi
done	
}

check_optimized_file(){

for opt1 in $(ls -1 $xHOME/.local/share/applications/wine-optimized-extensions-*.desktop 2> /dev/null)
do
AppName="$(cat "$opt1" | grep "Name=" | cut -f 2 -d '=')" 
OptAppName="wine-optimized-extensions-$(echo "$AppName" | sed -e "s#\ #_#g")"
srcfile="$(find "$xHOME/.local/share/applications/wine/Programs/" -name "*${AppName}*.desktop" -type f | sed -e "s#\ #%20#g" | head -n 1)"
 if [ "$srcfile" == "" ]; then
  echo "Deleting $OptAppName"
  rm -f $xHOME/.local/share/applications/${OptAppName}.desktop
 fi
done	
	
}

move_assoc_file(){

if [  ! -d $xHOME/.local/share/wine-extensions ]; then
 mkdir $xHOME/.local/share/wine-extensions
fi

mv -f $xHOME/.local/share/applications/wine-extension-*.desktop $xHOME/.local/share/wine-extensions/
	
}

rebuild_optimized_assoc_file(){
for exts in $(ls -1 $xHOME/.local/share/applications/wine-extension-*.desktop 2> /dev/null)
do

AppName=""
OptAppName=""

echo "Processing $(basename $exts)"

AppName="$(cat "$exts" | grep "Name=" | cut -f 2 -d '=')" 
mime2="$(cat "$exts" | grep "MimeType=" | cut -f 2 -d '=')"
srcfiles="$(find "$xHOME/.local/share/applications/wine/Programs/" -name "*${AppName}*.desktop" -type f | sed -e "s#\ #%20#g" | sort)"

if [ "$srcfiles" != "" ]; then
 for srcfile in $srcfiles
 do
  rfile2="$(echo "$srcfile" | sed -e "s#%20#\ #g")"
  xOptAppName="wine-optimized-extensions-$(grep "^Name=" "$rfile2" | cut -f 2 -d '=' | sed -e "s#\ #_#g")"
    if [ ! -e $xHOME/.local/share/applications/${xOptAppName}.desktop ] ; then
      echo "Source: $srcfile"
	  echo "Reading $srcfile"
	  echo "[Desktop Entry]" > $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^Type=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^Name=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^MimeType=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  #grep "^Exec=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  echo "Exec=wine start /unix %f" >> $xHOME/.local/share/applications/${xOptAppName}.desktop
	  echo "NoDisplay=true" >> $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^StartupNotify=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^Icon=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  chmod +x $xHOME/.local/share/applications/${xOptAppName}.desktop
    fi
 done
else
  rm -f $xHOME/.local/share/applications/wine-optimized-extensions-*$(echo "$AppName" | sed -e "s#\ #_#g")*.desktop
fi

#find "$xHOME/.local/share/applications" -name "wine-optimized-extensions-*$(echo "$AppName" | sed -e "s#\ #_#g")*.desktop" -type f

srcfiles2="$(find "$xHOME/.local/share/applications" -name "wine-optimized-extensions-*$(echo "$AppName" | sed -e "s#\ #_#g")*.desktop" -type f)"

if [ "$srcfiles2" != "" ]; then
 for srcfile in $srcfiles2
 do
  rfile="$srcfile"
	if [ -e "$rfile" ]; then
	 echo "Integrating $mime2 to $rfile"
	 if [ "$(grep "MimeType=" "$rfile")" != "" ]; then
	  oldmime="$(cat "$rfile" | grep "MimeType=" | cut -f 2 -d '=')"
	  if [ "$(echo "$oldmime" | grep "$mime2")" == "" ]; then
	   if [ "$(echo "$oldmime" | rev | cut -c 1)" == ";" ]; then 
		newmime="${oldmime}${mime2}"
	   else
		if [ "$oldmime" == "" ]; then
		newmime="${mime2}"
		else       
		newmime="${oldmime};${mime2}"
		fi
	   fi
	   sed -i "s#MimeType=.*#MimeType=$newmime#g" "$rfile"
	  fi
	 else
	  echo "MimeType=$mime2" >> "$rfile"
	 fi
	fi
 done
fi

done

}

optimize_assoc_file(){
for exts in $(ls -1 $xHOME/.local/share/applications/wine-extension-*.desktop 2> /dev/null)
do

AppName=""
OptAppName=""

echo "Processing $(basename $exts)"

AppName="$(cat "$exts" | grep "Name=" | cut -f 2 -d '=')" 
mime2="$(cat "$exts" | grep "MimeType=" | cut -f 2 -d '=')"
srcfiles="$(find "$xHOME/.local/share/applications/wine/Programs/" -name "*${AppName}*.desktop" -type f | sed -e "s#\ #%20#g" | sort)"

if [ "$srcfiles" != "" ]; then
 for srcfile in $srcfiles
 do
  rfile2="$(echo "$srcfile" | sed -e "s#%20#\ #g")"
  xOptAppName="wine-optimized-extensions-$(grep "^Name=" "$rfile2" | cut -f 2 -d '=' | sed -e "s#\ #_#g")"
    if [ ! -e $xHOME/.local/share/applications/${xOptAppName}.desktop ] ; then
      echo "Source: $srcfile"
	  echo "Reading $srcfile"
	  echo "[Desktop Entry]" > $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^Type=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^Name=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^MimeType=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  #grep "^Exec=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  echo "Exec=wine start /unix %f" >> $xHOME/.local/share/applications/${xOptAppName}.desktop
	  echo "NoDisplay=true" >> $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^StartupNotify=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  grep "^Icon=" "$rfile2" >>  $xHOME/.local/share/applications/${xOptAppName}.desktop
	  chmod +x $xHOME/.local/share/applications/${xOptAppName}.desktop
    fi
 done
else
  rm -f $xHOME/.local/share/applications/wine-optimized-extensions-*$(echo "$AppName" | sed -e "s#\ #_#g")*.desktop
fi

#find "$xHOME/.local/share/applications" -name "wine-optimized-extensions-*$(echo "$AppName" | sed -e "s#\ #_#g")*.desktop" -type f

srcfiles2="$(find "$xHOME/.local/share/applications" -name "wine-optimized-extensions-*$(echo "$AppName" | sed -e "s#\ #_#g")*.desktop" -type f)"

if [ "$srcfiles2" != "" ]; then
 for srcfile in $srcfiles2
 do
  rfile="$srcfile"
	if [ -e "$rfile" ]; then
	 echo "Integrating $mime2 to $rfile"
	 if [ "$(grep "MimeType=" "$rfile")" != "" ]; then
	  oldmime="$(cat "$rfile" | grep "MimeType=" | cut -f 2 -d '=')"
	  if [ "$(echo "$oldmime" | grep "$mime2")" == "" ]; then
	   if [ "$(echo "$oldmime" | rev | cut -c 1)" == ";" ]; then 
		newmime="${oldmime}${mime2}"
	   else
		if [ "$oldmime" == "" ]; then
		newmime="${mime2}"
		else       
		newmime="${oldmime};${mime2}"
		fi
	   fi
	   sed -i "s#MimeType=.*#MimeType=$newmime#g" "$rfile"
	  fi
	 else
	  echo "MimeType=$mime2" >> "$rfile"
	 fi
	fi
 done
fi

done
move_assoc_file
}

if [ "$(which wine)" == "" ]; then
 if [ ! -e $WINEHOME ]; then
 delete_menu_icons
 rm -f $xHOME/.local/share/applications/wine-*.desktop
 rm -f $xHOME/.local/share/mime/packages/x-wine-*
 rm -rf $xHOME/.local/share/icons/*/*/*/*wine*
 rm -f $xHOME/.local/share/wine-extensions/*
 delete_desktop_files
 exit
 else
  delete_menu_icons
  rm -f $xHOME/.local/share/applications/wine-optimized-extensions-*.desktop
  delete_desktop_files
 fi
else
 if [ ! -e $WINEHOME ]; then
  delete_menu_icons
  rm -f $xHOME/.local/share/applications/wine-*.desktop
  rm -f $xHOME/.local/share/mime/packages/x-wine-*
  rm -rf $xHOME/.local/share/icons/*/*/*/*wine*
  rm -f $xHOME/.local/share/wine-extensions/*
  delete_desktop_files
  exit
 else
   newmenucount=$(find $WINEHOME/drive_c/users -name "*.lnk" -type f | sed -e "s#\ #%20#g" | wc -l) 
   if [ ! -e $xHOME/.local/share/applications/wine ] || [ $(find "$xHOME/.local/share/applications/wine/Programs/" -name "*.desktop" -type f | sed -e "s#\ #%20#g" | wc -l) -eq 0 ]; then
    if [ $(find $WINEHOME/drive_c/users -name "*.lnk" -type f | wc -l) -ne 0 ]; then
     echo "Rebuilding Menu entries"
     find $WINEHOME/drive_c/users -name "*.lnk" -type f -exec wine winemenubuilder -r '{}' \;
	 echo $newmenucount > "$menucountfile"
	fi
   else
    if [ $lastmenucount -ne $newmenucount ]; then
     check_wine_entries
     echo $newmenucount > "$menucountfile"
    fi
   fi
             
   if [ $(ls -1 $xHOME/.local/share/applications/wine-extension-*.desktop 2>/dev/null | wc -l) -ne 0 ]; then
    optimize_assoc_file
   fi
    
   newassocount=$(ls -1 $xHOME/.local/share/wine-extensions/wine-extension-*.desktop 2>/dev/null | wc -l)
   newoptmcount=$(ls -1 $xHOME/.local/share/applications/wine-optimized-extensions-*.desktop 2>/dev/null | wc -l)

   if [ $lastassocount -ne $newassocount ] || [ $newoptmcount -eq 0 ]; then         
    check_association_file
   fi
      
   if [ -d $xHOME/.local/share/wine-extensions ]; then
    if [ $newoptmcount -eq 0 ]; then
     if [ $(ls -1 $xHOME/.local/share/wine-extensions/wine-extension-*.desktop 2>/dev/null | wc -l) -ne 0 ]; then
      rebuild_optimized_assoc_file
     fi
    else
     check_optimized_file
    fi
   fi
   
   if [ $(find "$xHOME/.local/share/applications/wine/Programs/" -name "*.desktop" -type f | sed -e "s#\ #%20#g" | wc -l) -eq 0 ]; then
    rm -rf $xHOME/.local/share/applications/wine/Programs/*
   fi
   
   if [ $(ls -1 $xHOME/.local/share/applications/user-wine-*.desktop 2>/dev/null | wc -l) -eq 0 ]; then
    make_wine_user_ctrl
   fi
      
   update_association
     
 fi
fi

