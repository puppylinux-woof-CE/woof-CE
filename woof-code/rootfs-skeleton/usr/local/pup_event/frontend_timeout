#!/bin/bash
#(c) Copyright 2013 Barry Kauler, bkhome.org
#2013 Licence GPL3 (/usr/share/doc/legal)
#perform background housekeeping.

#exec &>/tmp/${0##*/}.log ; set -x #debug

SAVECNT=0
MOUSECNT=0
MINUTECNT=0
CURPOS1=""

. /etc/rc.d/PUPSTATE
. /etc/rc.d/functions_x #fx_functions

# bash builtins: avoid calling some external apps.. specially sleep
for builtin in sleep basename dirname finfo head ln logname mkdir print printenv realpath rmdir sync uname
do
	if [ -f /usr/lib/bash/${builtin} ] ; then
		enable -f /usr/lib/bash/${builtin} ${builtin}
	fi
done

#===============================================

while [ 1 ]
do

	sleep 6

	PS="`busybox ps`"
	echo "$PS" | grep -q 'zzFRONTEND_CHANGE' && continue

	. /etc/eventmanager #has RAMSAVEINTERVAL, HOTPLUGNOISY, BACKENDON, POWERTIMEOUT
	. /usr/local/pup_event/frontend_funcs

	[ "$RAMSAVEINTERVAL" = "" ] && RAMSAVEINTERVAL=30
	RAMSAVEINTERVAL=$(( $RAMSAVEINTERVAL * 60 )) #convert minutes to seconds.
	[ "$POWERTIMEOUT" = "" ] && POWERTIMEOUT=0
	POWERTIMEOUT=$(( $POWERTIMEOUT * 60 )) #convert minutes to seconds.

	PREVSIZETMPM=0
	PREVSIZEFREEM=0

	case $PUPMODE in 3|7|13)
		SAVECNT=$(( $SAVECNT + 6 ))
		if [ $RAMSAVEINTERVAL -ne 0 -a $SAVECNT -gt $RAMSAVEINTERVAL ];then
			touch /tmp/snapmergepuppyrequest #request to savepuppy_func.
			SAVECNT=0
		fi ;;
	esac

	#----------------------------------------------------------------
	#POWERTIMEOUT
	if [ $POWERTIMEOUT -ne 0 ];then #power-off computer after inactivity.
		MOUSECNT=$(( $MOUSECNT + 6 ))
		MINUTECNT=$(( $MINUTECNT + 6 ))
		if [ $MINUTECNT -gt 59 ];then #come in here every minute...
			MINUTECNT=0
			CURPOS2="`getcurpos`"
			if [ -z "$CURPOS1" ] ; then
				CURPOS1="$CURPOS2"
			fi
			if [ "$CURPOS1" != "$CURPOS2" ];then
				MOUSECNT=0
			fi
			CURPOS1="$CURPOS2"
			[ $MOUSECNT -gt $POWERTIMEOUT ] && wmpoweroff
		fi
	fi
	#----------------------------------------------------------------

	#some apps should not be disturbed by this background stuff...
	#w482 add xorriso... 111228 added removepreview.sh (in /usr/local/petget) but probably test for "petget" is already enough...
	#120512 Karl Godt: do not save when compiling, add: make, cc, new2dir. 120513 add -w option, and gcc, imake, cmake, gxine, gmplayer...
	if [ "`echo "$PS" | grep -w -E 'make|cc|gcc|imake|cmake|new2dir|xorriso|xorrecord|xine|gxine|petget|wget|axel|dotpup|mplayer|gmplayer|gcurl|gimv|burniso2cd|growisofs|cdrecord|pcdripper|xfmedia|xmms|ripoff|pdvdrsab|pburn|mhwaveedit|installpkg\.sh|downloadpkgs\.sh|removepreview\.sh'`" != "" ] ; then
		continue
	fi

	#monitor free memory, periodic save of tmpfs top layer...
	case $PUPMODE in
		3|7|13) savepuppy_func ;;
	esac

	[ "$HOTPLUGON" = "false" ] && continue #see /etc/eventmanager

	#unfortunately, we have to poll at regular intervals to see if a cd is inserted...
	for i in /sys/block/sr* /sys/block/hd*
	do
		[ -e $i ] || continue
		DRV_NAME=${i##*/}
		fx_drv_is_optical ${DRV_NAME} || continue
		DRV_CATEGORY="optical"
		grep -q "^/dev/${DRV_NAME} " /proc/mounts && continue #only check cd if unmounted.
		cddetect_quick -d/dev/${DRV_NAME} >/dev/null 2>&1 #very fast.
		if [ $? -eq 0 ];then #inserted
			if [ ! -d /root/.pup_event/drive_${DRV_NAME} ] ; then
				create_icon_func #requires DRV_NAME, DRV_CATEGORY, DRV_DESCRIPTION.
				if [ "$HOTPLUGNOISY" = "true" ] ; then
					FRONTEND_CHANGE=1 /root/.pup_event/drive_${DRV_NAME}/AppRun optical & #handler script.
				fi
			fi
		else # not inserted
			if [ -d /root/.pup_event/drive_${DRV_NAME} ] ; then
				rm -rf /root/.pup_event/drive_${DRV_NAME}* #v410 ensure no drive directory if drive empty.
				remove_pinboard_func #needs DRV_NAME
			fi
		fi
	done

done

### END ###
