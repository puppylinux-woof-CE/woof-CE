#!/bin/bash
#120201 rodin.s: internationalized.
#130527 extract code that bumps user to root to script 'user2root'.
#130531 explain root, finn and spot.
#130601 offer run some internet apps as user 'spot'. see also usr/sbin/setup-spot and 3builddistro (in woof).
#130604 use actual names of executables, passed to setup-spot. multiple spot checkboxes.
#130723 pre-populate /root/.spot-status.

export TEXTDOMAIN=loginmanager
export TEXTDOMAINDIR=/usr/share/locale
export OUTPUT_CHARSET=UTF-8
. gettext.sh

HOMEUSER="`whoami`"
if [ -f /tmp/services/user_info ] ; then
	. /tmp/services/user_info
	HOMEUSER="$USER"
fi

xHOMEUSER="$HOMEUSER"
[ "$HOMEUSER" = "root" ] && xHOMEUSER='administrator'

[ "`whoami`" != "root" ] && exec sudo -A ${0} ${@} #110505

#========================================================================
login_as() {
	[ "$1" ] || return
	/usr/lib/gtkdialog/box_yesno "Login Manager" "Confirm that you really want to log in as $1 at the next boot"
	case $? in
		0) echo -n $1 > /etc/plogin.set ;;
		1) rm -f /etc/plogin.set ;;
	esac
}

set_password() {
	#change root password, and require password to 'su root'...
	USER=$1
	PASSWORD="$(/usr/lib/gtkdialog/box_passwd --confirm "Change password for: $USER" "Please enter a password for $USER, minimum six characters.")"
	if [ $? -eq 0 ] ; then
		echo "${USER}:${PASSWORD}" | busybox chpasswd -c sha512
		if [ $? -eq 0 ] ; then
			mkdir -p /var/local/chgdpasswd/
			echo -n > /var/local/chgdpasswd/${USER}
			/usr/lib/gtkdialog/box_ok "Login Manager" complete "Password successfully changed."
		fi
	fi
}

spot_dlg() {
	touch /root/.spot-status
	SPOTCHECKS=''
	if [ -s /root/.spot-status ];then
		#organise checkboxes into 3 rows per column...
		SPOTCHECKS='<vbox>'
		CNT=0
		for ASPOTLIST in `cat /root/.spot-status`
		do
			[ ! "$ASPOTLIST" ] && continue
			CNT=$(($CNT + 1))
			case $CNT in
				4) SPOTCHECKS="${SPOTCHECKS}</vbox><vbox>" ;;
				7) SPOTCHECKS="${SPOTCHECKS}</vbox><vbox>" ;;
				10) SPOTCHECKS="${SPOTCHECKS}</vbox><vbox>" ;;
			esac
			ANAME="`echo -n "$ASPOTLIST" | cut -f 1 -d '='`"
			AVALUE="`echo -n "$ASPOTLIST" | cut -f 2 -d '='`"
			SPOTCHECKS="${SPOTCHECKS}<checkbox><label>${ANAME}</label><variable>CHECK_${ANAME}</variable><default>${AVALUE}</default></checkbox>"
		done
		SPOTCHECKS="${SPOTCHECKS}</vbox>"
	fi

	export SPOT_DIALOG='
<window title="Login and Security Manager" icon-name="gtk-execute" resizable="false">
 <vbox space-expand="true" space-fill="true">
	<hbox>
		<pixmap><input file>/home/spot/spot.png</input></pixmap>
		<frame spot>
			<vbox>
				<text><label>'$(gettext "Logged in as administrator, it is possible to run some Internet applications as user 'spot'. This gives theoretical extra security.")'</label></text>
				<hbox>
					<vbox>
					<text width-chars="14"><label>'$(gettext 'Tick apps to run as spot:')'</label></text>
					</vbox>
					'${SPOTCHECKS}'
				</hbox>
			</vbox>
		</frame>
	</hbox>
  
	<hbox>
		<text space-expand="true" space-fill="false"><label>"       "</label></text>
		<button ok></button>
		<button cancel></button>
	</hbox>
 </vbox>
</window>
'
	#echo "$SPOT_DIALOG" > /tmp/loginmanager_SPOT.xml #debug
	RETSTRING="`gtkdialog --program=SPOT_DIALOG --center`"
	[ $? -ne 0 ] && exit
	eval "$RETSTRING"
	[ "$EXIT" != "OK" ] && return
	if [ -s /root/.spot-status ];then
		for ASPOTLIST in `echo "$RETSTRING" | grep '^CHECK_'`
		do
			ACHECKNAME="`echo -n "$ASPOTLIST" | cut -f 1 -d '='`"
			ANAME="`echo -n "$ACHECKNAME" | cut -f 2- -d '_'`"
			AVALUE="`echo -n "$ASPOTLIST" | cut -f 2 -d '"'`" #'geany
			ORIGVALUE="$(grep "^${ANAME}=" /root/.spot-status | cut -f 2 -d '=')"
			if [ "$AVALUE" != "$ORIGVALUE" ];then
				/usr/lib/gtkdialog/box_ok "$(gettext 'Security Manager:') ${ANAME}" nb "$(eval_gettext 'If ${ANAME} is running please exit it now, then click OK button...')"
				setup-spot "${ANAME}=${AVALUE}"
				case $AVALUE in
				true)
					M_sm1="$(eval_gettext "The next time that you start \${ANAME}, it will run as user 'spot'.")

$(gettext 'Note, this restricts where you can download and save files to, and where they can be edited. You are restricted to /home/spot, and the default folder is /home/spot/Downloads.')

$(eval_gettext 'Note also, if you move or copy any files into /home/spot while ${ANAME} is running, you may be able to open but not edit them, as they may not have permissions/ownership rights for spot -- exiting and restarting ${ANAME} will automatically fix this.')"
					;;
				false)
					M_sm1="$(eval_gettext "The next time that you start \${ANAME}, it will run as the 'root' user (administrator).")

$(gettext 'Note, this gives you complete freedom to download, save and edit files anywhere in the system.')"
					;;
				esac
				/usr/lib/gtkdialog/box_ok "$(gettext 'Security Manager:') ${ANAME}" complete "$M_sm1"
			fi
		done
	fi
}

export -f login_as
export -f set_password
export -f spot_dlg

#========================================================================

if [ "$HOMEUSER" = "root" ];then #130601 130604

	LOGIN_AS_FINN="  <vbox>
   <button>
    <label>$(gettext '*** Set finn as the default login account ***')</label>
    <action>login_as finn</action>
   </button>
  </vbox>"
	LOGIN_AS_ROOT="  <vbox>
   <button>
    <label>$(gettext 'Configure applications to run as spot...')</label>
    <action>spot_dlg</action>
   </button>
  </vbox>"

	#130723 pre-populate .spot-status... 130822 add firefox...
	for ONEAPP in seamonkey QtWeb opera firefox palemoon midori slimjet light netsurf iron min chromium google-chrome
	do
		[ "$(which ${ONEAPP})" = "" ] && continue
		[ "$(grep "${ONEAPP}" /root/.spot-status)" = "" ] && echo "${ONEAPP}=false" >> /root/.spot-status
	done
else
	LOGIN_AS_FINN=
	LOGIN_AS_ROOT="  <vbox>
   <button>
     <label>$(gettext '*** Set root as the default login account ***')</label>
     <action>login_as root</action>
   </button>
  </vbox>"
fi

#===================================================================

export MAIN_DIALOG='
<window title="Login and Security Manager" icon-name="gtk-execute" resizable="false">
 <vbox space-expand="true" space-fill="true">
	<text use-markup="true">
		<label>"<b>'$(gettext 'Currently you are logged in as:')' <big>'${xHOMEUSER}'</big></b>"</label>
	</text>
	<hbox>
		<pixmap><input file>/usr/share/doc/puppylogo96.png</input></pixmap>
		<frame administrator>
			<vbox>
				<text>
					<label>'$(gettext "Puppy is structured in such a way that we consider running as administrator (also known as 'root') to be safe, and is the choice of most users.")'</label>
				</text>
			</vbox>
			<vbox>
				<button>
					<label>'$(gettext 'Set administrator password')'</label>
					<action>set_password root</action>
				</button>
			</vbox>
			'${LOGIN_AS_ROOT}'
		</frame>
	</hbox>

	'${SPOT_DLG}'
  
	<hbox>
		<pixmap><input file>/usr/share/pixmaps/puppy/game_chess.svg</input></pixmap>
		<frame finn>
			<vbox>
				<text use-markup="true"><label>"'$(gettext 'Puppy only has one non-admin user, finn, as it is not a multi-user system in the normal sense.')'
<b>'$(gettext 'WARNING: finn is experimental')'</b>"</label>
				</text>
			</vbox>
			<button>
				<label>'$(gettext 'Set user password')'</label>
				<action>set_password finn</action>
			</button>
			'${LOGIN_AS_FINN}'
		</frame>
	</hbox>
  
	<hbox>
		<button space-expand="false" space-fill="false">
			'"`/usr/lib/gtkdialog/xml_button-icon help`"'
			<label>"'$(gettext 'Help')'"</label>
			<action>basichtmlviewer file:///usr/share/doc/root.htm & </action>
		</button>
		<text space-expand="true" space-fill="false"><label>"       "</label></text>
		<button space-expand="false" space-fill="false">
			'$(/usr/lib/gtkdialog/xml_button-icon quit.svg)'
			<label>Quit</label>
			<action type="exit">Cancel</action>
		</button>
	</hbox>
 </vbox>
</window>
'

#echo "$MAIN_DIALOG" > /tmp/loginmanager.xml #debug
gtkdialog --program=MAIN_DIALOG --center

###END###
