#!/bin/bash
#Combining fontwizard, pFont and set-xftdpi (Barry Kauler 2009)
#Sigmund Berglund, Nov 2013

export TEXTDOMAIN=fontmanager
export OUTPUT_CHARSET=UTF-8

#================================================================
#                    FONTMANAGER
#================================================================

#read current dpi setting...
CURRDPI=`grep "^Xft\\.dpi:" $HOME/.Xresources | tr '\t' ' ' | tr -s ' ' | cut -f 2 -d ' '`
[ ! $CURRDPI ] && CURRDPI=78
CURRINDEX=$(( $CURRDPI / 6 - 9 ))

[ ! -d $HOME/.config/fontconfig ] && mkdir -p $HOME/.config/fontconfig

#read appearance values
if [ -f $HOME/.config/fontconfig/fonts.conf ];then
 export antialiasing=$(grep -A 2 'antialias' $HOME/.config/fontconfig/fonts.conf | awk -F'[<>]' '/bool/ {print $3}')
 export hinting=$(grep -A 2 'hinting' $HOME/.config/fontconfig/fonts.conf | awk -F'[<>]' '/bool/ {print $3}')
 export autohint=$(grep -A 2 'autohint' $HOME/.config/fontconfig/fonts.conf | awk -F'[<>]' '/bool/ {print $3}')
 export hintstyle=$(grep -A 2 'hintstyle' $HOME/.config/fontconfig/fonts.conf | awk -F'[<>]' '/int/ {print $3}')
 export lcdfilter=$(grep -A 2 'lcdfilter' $HOME/.config/fontconfig/fonts.conf | awk -F'[<>]' '/int/ {print $3}')
else 
 export antialiasing=false hinting=false autohint=false hintstyle=0 lcdfilter=1
fi

#what tab should be active
[ "$1" = "install" ] && PAGE_NR=2 || PAGE_NR=0

install (){
	case $FONT in
	*.ttf|*.otf)
		cp "$FONT" /usr/share/fonts/default/TTF/
		rm /usr/share/fonts/default/TTF/fonts.dir
		rm /usr/share/fonts/default/TTF/fonts.scale
		mkfontscale /usr/share/fonts/default/TTF
		mkfontdir /usr/share/fonts/default/TTF
		;;
	*)
		Xdialog --title "Font installer" --msgbox "'$(gettext 'No TTF-file to install')" 0 0
		;;
	esac
}
export -f install

hintstyleval="none"

[ $hintstyle -eq 1 ] && hintstyleval="slight"
[ $hintstyle -eq 2 ] && hintstyleval="medium"
[ $hintstyle -eq 3 ] && hintstyleval="full"

lcdfilterval="none"

[ $lcdfilter -eq 1 ] && lcdfilterval="default"
[ $lcdfilter -eq 2 ] && lcdfilterval="light"
[ $lcdfilter -eq 3 ] && lcdfilterval="legacy"
[ $lcdfilter -eq 4 ] && lcdfilterval="legacy1"

S='
<window title="'$(gettext 'Font Manager')'" icon-name="gtk-execute"> 
<vbox space-expand="true" space-fill="true">
  <notebook tab-pos="2" page="'$PAGE_NR'" labels="'$(gettext 'Size')'|'$(gettext 'Appearance')'|'$(gettext 'Install fonts')'">


    <frame '$(gettext 'Global font size')'>
      '"`/usr/lib/gtkdialog/xml_info scale font_size.svg 60 "$(gettext 'Please choose dpi (dots per inch) for the screen. The larger the value, the bigger that antialiased fonts will render on the screen. Adjust up or down if fonts are rendering too small or too big on screen.')" " " "<b>$(gettext 'Note!')</b> $(gettext 'Some apps do not use antialiased rendering and will not be affected by this setting.')" "<b>$(gettext 'Note!')</b> $(gettext 'Restart X for changes to take effect')"`"'        
      <vbox space-expand="false" space-fill="false">
        <text height-request="20"><label>""</label></text>
        <hbox>
          <text><label>""</label></text>
          <text><label>'$(gettext 'Choose global fontsize')'</label></text>
          <comboboxtext width-request="70">
            <default>'$CURRDPI'</default>
            <variable>NEWDPI</variable>
            <item>54</item>
            <item>60</item>
            <item>66</item>
            <item>72</item>
            <item>78</item>
            <item>84</item>
            <item>90</item>
            <item>96</item>
            <item>102</item>
            <item>108</item>
            <item>114</item>
            <item>120</item>
            <item>126</item>
            <item>132</item>
            <item>138</item>
            <item>144</item>
            <item>150</item>
          </comboboxtext>
        </hbox>
        <text height-request="5"><label>""</label></text>
      </vbox>
    </frame>


    <frame '$(gettext 'Font appearance')'>
      '"`/usr/lib/gtkdialog/xml_info scale font.svg 60 "$(gettext "You can change the way fonts appear on your screen: make them either sharper or smoother.")" "$(gettext "For LCD it is recommend to turn everything on. For CRT screens, do the opposite.")" " " "<b>$(gettext 'Note!')</b> $(gettext 'Restart application for changes to take affect.')"`"'        
      <vbox space-expand="false" space-fill="false">
        <text height-request="20"><label>""</label></text>
        <checkbox tooltip-text="'$(gettext "If checked, fonts will be smoothed with antialiasing.")'">
          <label>'$(gettext 'Antialiasing')'</label>
          <variable>antialiasing</variable>
          <default>'$antialiasing'</default>
        </checkbox>
        <checkbox tooltip-text="'$(gettext "If checked, fonts will be smoothed with hinting.")'">
          <label>'$(gettext 'Hinting')'</label>
          <variable>hinting</variable>
          <default>'$hinting'</default>
        </checkbox>
        <hbox space-expand="true" space-fill="true">
          <checkbox>
            <label>'$(gettext 'Automatic hinting')'</label>
            <variable>autohint</variable>
            <default>'$autohint'</default>
          </checkbox>
        </hbox>
        <hbox space-expand="true" space-fill="true">
		  <text space-expand="true" space-fill="true"><label>""</label></text>
		  <text space-expand="false" space-fill="false"><label>'$(gettext 'Hint style')'</label></text>		  
		  <comboboxtext space-expand="false" space-fill="false">
		    <default>'$hintstyleval'</default>
		    <variable>hintstyle</variable>
		    <item>none</item>
		    <item>slight</item>
		    <item>medium</item>
		    <item>full</item>
		  </comboboxtext>
		  <text space-expand="false" space-fill="false"><label>'$(gettext 'LCD Filter')'</label></text>		  
		  <comboboxtext space-expand="false" space-fill="false">
		    <default>'$lcdfilterval'</default>
		    <variable>lcdfilter</variable>
		    <item>none</item>
		    <item>default</item>
		    <item>light</item>
		    <item>legacy</item>
		    <item>legacy1</item>
		  </comboboxtext>		   
		</hbox>
        <text height-request="5"><label>""</label></text>
        </vbox>
      </frame>


      <frame '$(gettext 'Install font')'>
        '"`/usr/lib/gtkdialog/xml_info scale font_add.svg 60 "$(gettext 'Define a *.TTF file by browsing, or just drag it to the field below. Then click install. Windows TTF-files are fine.')" "$(gettext 'To install several fonts at once, copy new *.TTF files to the font directory') (<i>/usr/share/fonts/default/TTF</i>), $(gettext 'and click install.')"  " " "$(gettext 'You find a lot of free fonts on the web. - ie. at')" "<i>http://www.1001freefonts.com/</i>"`"'        
        <vbox space-expand="false" space-fill="false">
          <text height-request="20"><label>""</label></text>
          <hbox>
            <entry accept="filename"><variable>FONT</variable></entry>
            <button>
              '"`/usr/lib/gtkdialog/xml_button-icon open`"'
              <action type="fileselect">FONT</action>
              <action>refresh:FONT</action>
            </button>
          </hbox>
          <hbox>'
            S=$S'<button space-expand="false" space-fill="false">
              '"`/usr/lib/gtkdialog/xml_button-icon open`"'
              <label>'$(gettext 'Open font directory')'</label>
              <action>defaultfilemanager_x /usr/share/fonts/default/TTF</action>
            </button>'
            S=$S'<button>
	          '"`/usr/lib/gtkdialog/xml_button-icon font_add.svg`"'
	          <label>'$(gettext 'Install font(s)')'</label>
	          <action>install</action>
	          <action>clear:FONT</action>
            </button>
          </hbox>
          <text height-request="5"><label>""</label></text>
        </vbox>
      </frame>


    </notebook>
    <hbox space-expand="false" space-fill="false">'
      type gfontsel > /dev/null 2>&1 && S=$S' <button space-expand="false" space-fill="false">
        '"`/usr/lib/gtkdialog/xml_button-icon select-font`"'
        <label>'$(gettext 'View installed fonts')'</label>
        <action>gfontsel &</action>
      </button>'
      S=$S'<text space-expand="true" space-fill="true"><label>""</label></text>
    <button space-expand="false" space-fill="false">
      <label>'$(gettext "Ok")'</label>
      '"`/usr/lib/gtkdialog/xml_button-icon ok`"'
      <action type="exit">save</action>
    </button>      
    <button space-expand="false" space-fill="false">
      <label>'$(gettext "Cancel")'</label>
      '"`/usr/lib/gtkdialog/xml_button-icon cancel`"'
      <action type="exit">EXIT_NOW</action>
    </button>
  </hbox>
  </vbox>
</window>'
export Font_Manager="$S"

. /usr/lib/gtkdialog/xml_info gtk #build bg_pixmap for gtk-theme
eval $(gtkdialog -p Font_Manager)

case $EXIT in
	save)

		rhintstyleval=0

		[ $hintstyle == "slight" ] && rhintstyleval=1
		[ $hintstyle == "medium" ] && rhintstyleval=2
		[ $hintstyle == "full" ] && rhintstyleval=3

		rlcdfilterval=0

		[ $lcdfilter == "default" ] && rlcdfilterval=1		
		[ $lcdfilter == "light" ] && rlcdfilterval=2
		[ $lcdfilter == "legacy" ] && rlcdfilterval=3		
		[ $lcdfilter == "legacy1" ] && rlcdfilterval=4

		antialiasingval=0
		hintingval=0
		autohintval=0
		
		gnomeantialias="none"
				
		if [ "$antialiasing" == "true" ]; then
		 antialiasingval=1
		 gnomeantialias="rgba"
		fi
		
		[ "$hinting" == "true" ] && hintingval=1
		[ "$autohint" == "true" ] && autohintval=1

		#set size
		sed -i -e 's#^Xft\.dpi:.*#Xft\.dpi:\ '$NEWDPI'#' $HOME/.Xresources
		sed -i -e 's#^Xft\.autohint:.*#Xft\.autohint:\ '$autohintval'#' $HOME/.Xresources		
		sed -i -e 's#^Xft\.antialias:.*#Xft\.antialias:\ '$antialiasingval'#' $HOME/.Xresources
		sed -i -e 's#^Xft\.hinting:.*#Xft\.hinting:\ '$hintingval'#' $HOME/.Xresources
		sed -i -e 's#^Xft\.hintstyle:.*#Xft\.hintstyle:\ hint'$hintstyle'#' $HOME/.Xresources		
		sed -i -e 's#^Xft\.lcdfilter:.*#Xft\.lcdfilter:\ lcd'$lcdfilter'#' $HOME/.Xresources

		if [[ "$antialiasing" = "false" && "$hinting" = "false" && "$autohint" = "false" && "$rhintstyle" = 0 && "$rlcdfilter" = 0 ]];then
		 #don't write the file, delete if it's there.
		 [ -f $HOME/.fonts.conf ] && rm $HOME/.fonts.conf 
		 echo "not writing file"
		else
		 [ -f $HOME/.fonts.conf ] && rm $HOME/.fonts.conf 
		 cat > $HOME/.config/fontconfig/fonts.conf << _EOF
<?xml version="1.0"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
	<match target="font">
		<test qual="all" name="rgba">
			<const>unknown</const>
		</test>
		<edit name="rgba" mode="assign"><const>rgb</const></edit>
	</match>		
	<match target="font">
		<edit name="antialias" mode="assign">
			<bool>$antialiasing</bool>
		</edit>
		<edit name="hinting" mode="assign">
			<bool>$hinting</bool>
		</edit>
		<edit name="autohint" mode="assign">
			<bool>$autohint</bool>
		</edit>
		<edit name="hintstyle" mode="assign">
			<int>$rhintstyleval</int>
		</edit>
		<edit name="lcdfilter" mode="assign">
			<int>$rlcdfilterval</int>
		</edit>
	</match>
	<selectfont>
		<rejectfont>
			<pattern>
				<patelt name="scalable"><bool>false</bool></patelt>
			</pattern>
		</rejectfont>
	</selectfont> 
</fontconfig>
_EOF
		 
		 fc-cache -fv
		 
		 xrdb -merge $HOME/.Xresources

		 gsettings set org.gnome.desktop.interface font-antialiasing ${gnomeantialias} 2>/dev/null		 	
		 gsettings set org.gnome.desktop.interface font-hinting ${hintstyle}  2>/dev/null
		 
		 kwriteconfig5 --file kdeglobals --group General --key XftDPI $NEWDPI  2>/dev/null
		 kwriteconfig5 --file kdeglobals --group General --key XftAntialias --type bool $antialiasing 2>/dev/null
         	 kwriteconfig5 --file kdeglobals --group General --key XftHinting --type bool $hinting 2>/dev/null	
		 kwriteconfig5 --file kdeglobals --group General --key XftHintStyle --type string "hint${hintstyle}" 2>/dev/null	  # Use 'hintnone', 'hintslight', 'hintmedium', or 'hintfull'

		 xfconf-query -c xsettings -p /Xft/DPI -s $NEWDPI
		 xfconf-query -c xsettings -p /Xft/Antialias -s $antialiasingval
		 xfconf-query -c xsettings -p /Xft/Hinting -s $hintingval
		 xfconf-query -c xsettings -p /Xft/HintStyle -s "hint${hintstyle}"

		fi
		;;
esac

exit 0
