#!/bin/bash
#based on defaults-chooser by sc0ttman
#GPL 2015 - Sigmund Berglund (zigbert)

set -a #export all functions and variables
export TEXTDOMAIN=puppyapps
export OUTPUT_CHARSET=UTF-8
DEFAULTAPPS=""
echo 0 > /tmp/puppyapps_count #count available default* - for columns in gui
LANG=C grep -v '\[.*\]' /usr/share/applications/*.desktop > /tmp/puppyapps_desktop_output #we do this one time, instead of in search_desktop



    ############################
    #                          #
    #        Functions         #
    #                          #
    ############################


get_default () {
	LANG=C
	APP="$1"
	if [ "$DEFAULTAPPS" ]; then
		if ! ( echo "$DEFAULTAPPS" | grep -qw "default$1"); then
			echo '###'
			return 1
		fi
	fi
	F="$newroot/usr/local/bin/default$1"
	if [ ! -f "$F" ]; then
		echo '###'
		return 1
	fi
	#strip out 'exec ', ' "$@"', and all whitespace from the end of the last line of the file
	P=$(grep -m 1 '^[^#]*exec ' "$F" | sed -e 's/^.*exec[ ]//' -e 's/.\$@.*$//')
	#special treatment of defaultapps
	case $P in #if default* is the target (default value), we look into the array
		puppyapps*|default*)
			P=$(head -n1 /tmp/puppyapps_items_$APP 2> /dev/null)
			gettext 'Autodetect' > /tmp/puppyapps_default
			;;
	esac
	echo $P
	return 0
}

default_apps() { 
	echo 'archiver audioeditor audiomixer audioplayer barehtmlviewer browser calendar cdplayer cdrecorder chat chmviewer connect contact draw email filemanager htmleditor htmlviewer imageeditor imageviewer mediaplayer musicplayer paint pdfviewer processmanager screenshot run search spreadsheet terminal texteditor textviewer wordprocessor '
}

search_desktop() {
	grep -iE "$1" /tmp/puppyapps_desktop_output | cut -f1 -d':' | uniq 
}

build_items (){ #for comboboxes - to make startup faster, this is backgrounded and refreshed in gui when done.
	for I in $(default_apps); do
		echo "$(gettext 'Autodetect')" > /tmp/puppyapps_items_$I
		apps_array $I >> /tmp/puppyapps_items_$I
		#[ ! "`grep -vF "$(gettext 'Autodetect')" /tmp/puppyapps_items_$APP`" ] && return #skip if no matching apps are installed
	done
	echo true > /tmp/puppyapps_refreshitems
	[ "$XPID" ] && kill "$XPID" && XPID=""	#splash stop
}

apps_array() {
	#if no target is set in /usr/local/bin/default*, we gbrab the first existing executable in the list echoed from here.
	#therefor, be sure to included the most valuable apps first in the static part of the list.
	#executables not installed on system will NOT be in the echoed list.
	LANG=C
	case $1 in
	archiver)
		APPLIST="`echo -e "peazip\nfile-roller\nengrampa\npupzip\nxarchiver\nxarchive\n"`
		$(search_desktop 'archive')"
		;;
	audioeditor)
		APPLIST="`echo -e "audacity\nmhwaveedit\nsweep\n"`
		$(search_desktop '(audio|sound).*editor')"
		;;
	audiomixer)
		APPLIST="`echo -e "gnome-alsamixer\nrxvt -e alsamixer\nretrovol\n"`
		$(search_desktop 'mixer')"
		;;
	audioplayer)
		APPLIST="`echo -e "deadbeef\naudacious\naqualung\npmusic\npeasymp3\n"`
		$(search_desktop '(audio|media).*player')"
		;;
	barehtmlviewer)
		APPLIST="`echo -e "mozstart\ngtkmoz\nPuppyBrowser\ndillo\nhv3\nmini-web\nskipstone\nmidori\noperamini\nelinks\nicecat\nxlynx\nw3m\nw3m-term"`"
		;;
	browser)
		APPLIST="`echo -e "opera\npalemoon\nfirefox\nchromium\nchrome\nicecat\nmidori\nseamonkey\ndillo\n"`
		$(search_desktop 'web.*browser')"
		;;
	calendar)
		APPLIST="`echo -e "osmo\nical\ncalcurse\nnotecase"`"
		;;
	cdplayer)
		APPLIST="`echo -e "pmusic_CD\npmusic -c\npcd\n"`
		$(search_desktop 'cd.*player')"
		;;
	cdrecorder)
		APPLIST="`echo -e "k3b\ngraveman\ngrafburn\npeasydisc\npburn\nburniso2cd\n"`
		$(search_desktop 'burn')"
		;;
	chat)
		APPLIST="`echo -e "hexchat-wrapper\nhexchat\n"`
		$(search_desktop 'chat')"
		;;
	chmviewer)
		APPLIST="`echo -e "pzchmview\nchmsee\nkchmviewer\ngnochm\nxchm\nkchm\n"`"
		;;
	connect)
		APPLIST="`echo -e "connectwizard\\nsns\nfrisbee\nnet-setup.sh\npupdial\npppoe_gui\npgprs-shell\ngnome-ppp\n"`"
		;;
	contact)
		APPLIST="`echo -e "gaby\nosmo\nmozaddressbook\nsylpheed\nthunderbird\n"`"
		;;
	draw)
		APPLIST="`echo -e "inkscape\nlibreoffice5.0 --draw\ninscapelite\n"`
		$(search_desktop '(draw|(vector|grapgics|image).*editor)')"
		;;
	email)
		APPLIST="`echo -e "thunderbird\nsylpheed\n"`
		$(search_desktop 'mail')"
		;;
	filemanager)
		APPLIST="`echo -e "spacefm\npcmanfm\nwishrush\nthunar\nrox\n"`
		$(search_desktop 'file.*manager')"
		;;
	htmleditor)
		APPLIST="`echo -e "libreoffice5.0 --web\nbluefish\ngeany\n"`
		$(search_desktop '(html|web|text).*editor')"
		;;
	htmlviewer)
		APPLIST="`echo -e "mozstart\ngtkmoz\nPuppyBrowser\ndillo\nhv3\nmini-web\nskipstone\nmidori\noperamini\nelinks\nicecat\nxlynx\nw3m\nw3m-term"`
		$(search_desktop '(html|web|text)')"
		;;
	imageeditor)
		APPLIST="`echo -e "gimp\nmtpaint\n"`
		$(search_desktop '(graphics|image).*editor')"
		;;
	imageviewer)
		APPLIST="`echo -e "gpicview\nviewnior\n"`
		$(search_desktop '(grapgics|image|picture).*(editor|viewer)')"
		;;
	mediaplayer)
		APPLIST="`echo -e "smplayer\nvlc1\ngnomemplayershell\nvlc\ngxine\nxine\ngnome-mplayer\nmpv\nmplayer"`
		$(search_desktop 'media.*player')"
		;;
	musicplayer)
		APPLIST="`echo -e "amarok\nclementine\npmusic\n"`
		$(search_desktop '(audio|media).*player')"
		;;
	paint)
		APPLIST="`echo -e "gimp\nmtpaint\n"`
		$(search_desktop '(graphics|image).*editor')"
		;;
	pdfviewer)
		APPLIST="`echo -e "evince\nepdfview\n"`
		$(search_desktop 'pdfviewer')"
		;;
	processmanager)
		APPLIST="`echo -e "lxtask\npprocess\nhtop\n"`
		$(search_desktop 'process')"
		;;
	run)
		APPLIST="`echo -e "gmrun\nkrunner\nxfce4-appfinder\nlxpanelxctl\nprun\n"`"
		;;
	screenshot)
		APPLIST="`echo -e "tas\nscreeny\nscrot\nmtpaint -s"`
		$(search_desktop 'screenshot')"
		;;
	search)
		APPLIST="`echo -e "pfind\nfind2list\n"`
		$(search_desktop '(search|find)')"
		;;
	spreadsheet)
		APPLIST="`echo -e "libreoffice5.0 --calc\net\ngnumeric\nmtcelledit\n"`
		$(search_desktop 'spreadsheet')"
		;;
	terminal)
		APPLIST="`echo -e "lxterminal\nurxvt\nrxvt\nxterm\n"`
		$(search_desktop 'terminalemulator')"
		;;
	texteditor)
		APPLIST="`echo -e "geany\nleafpad\nrxvt -e vi\nrxvt -e mcedit\nrxvt -e mp\nrxvt -fn 9x15 -e nano\n"`
		$(search_desktop 'text.*editor')"
		;;
	textviewer)
		APPLIST="`echo -e "leafpad\ngeany\nrxvt -e vi\nrxvt -e mcedit\nrxvt -e mp\nrxvt -fn 9x15 -e nano\n"`
		$(search_desktop 'text')"
		;;
	wordprocessor)
		APPLIST="`echo -e "libreoffice5.0 --writer\nwps\nabiword\n"`
		$(search_desktop 'wordp')"
		;;
	esac
	echo -n > /tmp/puppyapps_array
	while read J; do
		#grep exec from *.desktop file
		[ -f "$J" ] && P="`grep -iFm 1 'exec=' "$J" | cut -f2 -d'='`" || P="$J"
		#check if installed and ready to execute (made for static arrays)
		case $P in rxvt*|*term*) E="$(awk -F ' -e ' '{print $2}' <<< "$P")";; *) E="$P";; esac
		if [ "$SKIP_INSTALLED_CHECK" = "true" ]; then
			echo $P >> /tmp/puppyapps_array
		else
			${prefix}which "$(cut -f1 -d' ' <<< "$E")" &>/dev/null && echo "$P" >> /tmp/puppyapps_array
		fi
	done <<< "`grep -Fv 'default' <<< "$APPLIST"`"
	awk '!a[$0]++' /tmp/puppyapps_array #awk removes duplicate lines without sorting
}

make_item() {
	TOP=$@
	[ "$TOP" ] || TOP='@'
	#avoid the default is set to itself
	(echo "$TOP"; grep -vw "$TOP") | grep -vw "default$APP" | sed -e 's|\(..*\)|<item>\1</item>|' | sed -e 's/>@</></'
}

make_box() {
	LABEL=$1
	VARIABLE=$2
	APP="`echo $2 | tr [A-Z] [a-z]`"
	ICON=$3
	#find default executable
	rm -f /tmp/puppyapps_default
	DEFAULT_EXEC=`get_default $APP`
	[ "$DEFAULT_EXEC" = '###' ] && return #skip if no default* is available
	#---
	[ -s /tmp/puppyapps_default ] && DEFAULT_EXEC="$(</tmp/puppyapps_default)" #autodetect - see get_default
	#new frame
	N="$(</tmp/puppyapps_count)"
	if [ "$N" -gt 14 ]; then
		N=0
		echo '</frame><frame>'
	fi
	N=$(($N + 1))
	echo -n $N > /tmp/puppyapps_count
	#---
	echo '
	<vbox space-expand="false" space-fill="false">
	  <hbox margin="5" space-expand="true" space-fill="true">
	    '$(/usr/lib/gtkdialog/xml_pixmap $ICON icon)'
	    <vbox space-expand="true" space-fill="true">
	      <text xalign="0" space-expand="true" space-fill="true"><label>"'$LABEL'"</label></text>
	      <comboboxentry space-expand="false" space-fill="false" tooltip-text="'$(gettext 'Choose your preferred default program, or type command.')'">
		    <variable>'$VARIABLE'</variable>
		    <default>'$DEFAULT_EXEC'</default>
		    <input file>/tmp/puppyapps_items_'$APP'</input>
	      </comboboxentry>
	    </vbox>
	  </hbox>
	</vbox>'
}

update_defaults () {
	LANG=C
	# change all the default*** files, using the 'change_default' util
	change_default 'archiver' "$ARCHIVER" "$newroot"
	change_default 'audioeditor' "$AUDIOEDITOR" "$newroot"
	change_default 'audiomixer' "$AUDIOMIXER" "$newroot"
	change_default 'audioplayer' "$AUDIOPLAYER" "$newroot"
	change_default 'barehtmlviewer' "$BAREHTMLVIEWER" "$newroot"
	change_default 'browser' "$BROWSER" "$newroot"
	change_default 'calendar' "$CALENDAR" "$newroot"
	change_default 'cdplayer' "$CDPLAYER" "$newroot"
	change_default 'cdrecorder' "$CDRECORDER" "$newroot"
	change_default 'chat' "$CHAT" "$newroot"
	change_default 'chmviewer' "$CHMVIEWER" "$newroot"
	change_default 'connect' "$CONNECT" "$newroot"
	change_default 'contact' "$CONTACT" "$newroot"
	change_default 'draw' "$DRAW" "$newroot"
	change_default 'email' "$EMAIL" "$newroot"
	change_default 'filemanager' "$FILEMANAGER" "$newroot"
	change_default 'htmleditor' "$HTMLEDITOR" "$newroot"
	change_default 'htmlviewer' "$HTMLVIEWER" "$newroot"
	change_default 'imageeditor' "$IMAGEEDITOR" "$newroot"
	change_default 'imageviewer' "$IMAGEVIEWER" "$newroot"
	change_default 'mediaplayer' "$MEDIAPLAYER" "$newroot"
	change_default 'musicplayer' "$MUSICPLAYER" "$newroot"
	change_default 'paint' "$PAINT" "$newroot"
	change_default 'pdfviewer' "$PDFVIEWER" "$newroot"
	change_default 'processmanager' "$PROCESSMANAGER" "$newroot"
	change_default 'run' "$RUN" "$newroot"
	change_default 'screenshot' "$SCREENSHOT" "$newroot"
	change_default 'search' "$SEARCH" "$newroot"
	change_default 'spreadsheet' "$SPREADSHEET" "$newroot"
	change_default 'terminal' "$TERMINAL" "$newroot"
	change_default 'texteditor' "$TEXTEDITOR" "$newroot"
	change_default 'textviewer' "$TEXTVIEWER" "$newroot"
	change_default 'wordprocessor' "$WORDPROCESSOR" "$newroot"

	. /usr/lib/gtkdialog/box_ok "$(gettext 'Default apps')" complete "$(gettext 'Your default apps have been updated.')"
}

change_default () {
	TYPE="$1"
	FILE="$2"
	newroot="$3"
	#check if the default* file exists
	if [ "$FILE" = '###' ] || [ ! "$FILE" ]; then
		echo
	elif echo "$FILE" | grep -iE "puppyapps|autodetect"; then
		echo -e "#!/bin/sh\nexec puppyapps default$TYPE"' "$@"' > "$newroot/usr/local/bin/default$TYPE"
		echo "Default $TYPE will be autodetected by Puppy"
	elif echo "$FILE" | grep -qw "default$TYPE"; then
		echo "'default$TYPE' cannot set to itself."
	elif [ -f "$newroot/usr/local/bin/default$TYPE" ];then
		#replace the old program with the new one
		if [ -f "$FILE" ]; then #path included
			echo -e "#!/bin/sh\nexec $FILE \"\$@\"" > "$newroot/usr/local/bin/default$TYPE" #add new comand
			echo "Default $TYPE changed to $FILE"
		elif [ "$FILE" ]; then
			if [ "`which $FILE`" ]; then
				echo -e "#!/bin/sh\nexec $FILE \"\$@\"" > "$newroot/usr/local/bin/default$TYPE" #add new comand
				echo "Default $TYPE changed to $FILE"
			else
				echo -e "#!/bin/sh\nexec puppyapps default$TYPE \"@\"" > "$newroot/usr/local/bin/default$TYPE"
				echo "$FILE is not installed on the system. Default $TYPE will be autodetected by Puppy"
			fi
		else
			echo -e "#!/bin/sh\nexec puppyapps default$TYPE \"@\"" > "$newroot/usr/local/bin/default$TYPE"
			echo "EXEC not set. Default $TYPE will be autodetected by Puppy"
		fi
	else #the default* file given was not found
		echo "The file '$newroot/usr/local/bin/default$TYPE' not found."
	fi
}

list_active (){
	/usr/lib/gtkdialog/box_splash -close never -fontsize large -icon_width 60 -icon /usr/share/pixmaps/puppy/puppy_config.svg -text "$(gettext 'Default Applications Chooser...')" &
	XPID=$!
	puppyapps -l > /tmp/puppyapps_tmp
	kill "$XPID"
	defaulttextviewer /tmp/puppyapps_tmp &
}



    ############################
    #                          #
    #         Program          #
    #                          #
    ############################

#parameters
while [ $# != 0 ]; do
	I=1
	while [ $I -lt `echo $# | wc -c` ]; do
		case $1 in
			default*)
				RUNAPP="`sed 's%default%%' <<< "$1"`"
				shift
				echo -n > /tmp/puppyapps_exec2
				while [ $# != 0 ]; do
					echo -n ' ' > /tmp/puppyapps_exec2
					echo -n "$1" | sed 's/ /\\ /g' >> /tmp/puppyapps_exec2
					shift
				done
				#---
				apps_array $RUNAPP > /tmp/puppyapps_items_$RUNAPP
				#build command
				RUNAPP_EXEC="`get_default "$RUNAPP"`"
				if [ "$RUNAPP_EXEC" ]; then
					echo -n "exec $RUNAPP_EXEC" > /tmp/puppyapps_exec
					[ -s /tmp/puppyapps_exec2 ] && cat /tmp/puppyapps_exec2 >> /tmp/puppyapps_exec
				else
					echo ". /usr/lib/gtkdialog/box_ok \"$(gettext 'Default apps')\" error \"$(gettext 'Generic app not found on your system'): <b>default$RUNAPP</b>\"" > /tmp/puppyapps_exec

				fi
				chmod 722 /tmp/puppyapps_exec
				/tmp/puppyapps_exec &
				exit 0
				;;
			-c) change_default "$2" "$3" "$newroot"
				exit
				;;
			-l)
				if [ "`grep "^-" <<< "$2"`" ] || [ ! "$2" ]; then
					TMP=$(default_apps)
				else
					TMP="$2"
					shift
				fi
				for I in $TMP; do
					echo -n "$I: "
					apps_array $I > /tmp/puppyapps_items_$I 2> /dev/null
					get_default $I
				done
				exit
				;;
			-ll)
				if [ "`grep "^-" <<< "$2"`" ] || [ ! "$2" ]; then
					TMP=$(default_apps)
				else
					TMP="$2"
					shift
					if [ ! "`grep "$TMP" <<< $(default_apps)`" ]; then
						echo "Error: $TMP is not a valid type"
						TMP=""
					fi
				fi
				for I in $TMP; do
					echo -e "\n-----------------------\n$I\n-----------------------"
					apps_array $I 2> /dev/null
				done
				exit
				;;
			-lll)
				if [ "`grep "^-" <<< "$2"`" ] || [ ! "$2" ]; then
					TMP=$(default_apps)
				else
					TMP="$2"
					shift
					if [ ! "`grep "$TMP" <<< $(default_apps)`" ]; then
						echo "Error: $TMP is not a valid type"
						TMP=""
					fi
				fi
				for I in $TMP; do
					echo -e "\n-----------------------\n$I\n-----------------------"
					SKIP_INSTALLED_CHECK=true
					apps_array $I 2> /dev/null
				done
				exit
				;;
			-m) 
				shift
				DEFAULTAPPS="$@"
				while [ $# -gt 0 ]; do shift; done
				;;
			-r)	#chroot into a new root, then run stuff, if the new root exists
				export newroot="$2"
				export prefix="chroot $newroot "
				echo "using a new root: $newroot..."
				shift
				;;
			-h|--help)
				echo 'Usage: puppyapps [OPTION(S)]

 Options
  default*       Starts the app based on the array in defaultapps
  
  -c TYPE EXEC   Change defaultapp without gui
                 EXEC is the new default target application
                 TYPE is one of the following
                 For supported TYPEs, see below
                 Example:
                 puppyapps -c brower firefox
                 puppyapps -c imageeditor /path/to/gimp
  -l [TYPE]      List default executable for TYPE(s)
                 If no TYPE is specified, show all TYPEs
                 For supported TYPEs, see below
  -ll [TYPE]     List installed executables in array
                 Sorted by priority
                 If no TYPE is specified, show all TYPEs
                 For supported TYPEs, see below
  -lll [TYPE]    List all apps in array
                 Sorted by priority
                 If no TYPE is specified, show all TYPEs
                 For supported TYPEs, see below
  -m default*    Manage only spesified defaultapp(s)
                 seperate apps with a space
  -r PATH        Using alternative root. for Woof-CE
  -h, --help     Show this help message
  
  
supported TYPEs:
----------------'
default_apps | tr ' ' '\n'

				exit
				;;
		esac
		shift
		I=$(($I+1))
	done
done

#check if -m switch has been used
if [ -z "$DEFAULTAPPS" -a -z "$1" ]; then
	PSRESULT=$(ps)
	P=$(echo "$PSRESULT" | grep -w "^[ ]*$PPID" | grep -o '/usr/local/bin/default[^ ]*')
	[ "$P" ] && DEFAULTAPPS=$(basename $P)
fi

#splash
if [ ! "$DEFAULTAPPS" ]; then
	/usr/lib/gtkdialog/box_splash -close never -fontsize large -icon_width 60 -icon /usr/share/pixmaps/puppy/puppy_config.svg -text " $(gettext 'Default Applications Chooser...')" &
	XPID=$!
fi

build_items

#build help GUI
gettext "<b>Helpful Tips</b>
You can add custom commands, parameters and options by typing the desired command in the chosen field and clicking the apply button. To load apps through the terminal, simply add 'rxvt -e ' before the command you wish to execute in the terminal.

Example: 'rxvt -e mp' will load the terminal based editor, called MP." > /tmp/box_help

export GUI='
<window title="'$(gettext 'Default Applications Chooser')'" default-height="500">
<vbox space-expand="true" space-fill="true">
  '"`/usr/lib/gtkdialog/xml_info fixed puppy_config.svg 60 "$(gettext 'Choose your preferred default programs and applications, which you can then launch from your start menu or desktop.')"`"'        
  <vbox space-expand="true" space-fill="true">
    <hbox shadow-type="0" scrollable="true" space-expand="true" space-fill="true">
      <frame>
        '$(make_box "$(gettext  "Word processor")" WORDPROCESSOR document)'
        '$(make_box "$(gettext  "Text editor")" TEXTEDITOR edit)'
        '$(make_box "$(gettext  "Text viewer")" TEXTVIEWER document_viewer)'
        '$(make_box "$(gettext  "PDF viewer")" PDFVIEWER pdf)'
        '$(make_box "$(gettext  "CHM viewer")" CHMVIEWER document_viewer)'
        '$(make_box "$(gettext  "Spreadsheet")" SPREADSHEET spreadsheet)'
        '$(make_box "$(gettext  "Calendar")" CALENDAR calendar)'
        '$(make_box "$(gettext  "Contact")" CONTACT user)'
        '$(make_box "$(gettext  "Media player")" MEDIAPLAYER multimedia)'
        '$(make_box "$(gettext  "Music player")" MUSICPLAYER audio)'
        '$(make_box "$(gettext  "Audio Player")" AUDIOPLAYER audio)'
        '$(make_box "$(gettext  "Audio Editor")" AUDIOEDITOR edit_sound)'
        '$(make_box "$(gettext  "Audio Mixer")" AUDIOMIXER sound_mixer)'
        '$(make_box "$(gettext  "CD player")" CDPLAYER cd_audio)'
        '$(make_box "$(gettext  "CD recorder")" CDRECORDER cd_burn)'
        '$(make_box "$(gettext  "Paint")" PAINT draw)'
        '$(make_box "$(gettext  "Draw")" DRAW draw_vector)'
        '$(make_box "$(gettext  "Image editor")" IMAGEEDITOR edit_image)'
        '$(make_box "$(gettext  "Image viewer")" IMAGEVIEWER image_viewer)'
        '$(make_box "$(gettext  "Screenshot")" SCREENSHOT photocamera)'
        '$(make_box "$(gettext  "File manager")" FILEMANAGER directory)'
        '$(make_box "$(gettext  "Archiver")" ARCHIVER package_compressed)'
        '$(make_box "$(gettext  "Search")" SEARCH find)'
        '$(make_box "$(gettext  "Terminal")" TERMINAL terminal)'
        '$(make_box "$(gettext  "Process manager")" PROCESSMANAGER execute)'
        '$(make_box "$(gettext  "App runner")" RUN execute)'
        '$(make_box "$(gettext  "Web browser")" BROWSER internet)'
        '$(make_box "$(gettext  "Mail")" EMAIL mail)'
        '$(make_box "$(gettext  "HTML editor")" HTMLEDITOR edit_html)'
        '$(make_box "$(gettext  "HTML viewer")" HTMLVIEWER document_viewer)'
        '$(make_box "$(gettext  "Connect")" CONNECT internet_connect)'
        '$(make_box "$(gettext  "Chat")" CHAT chat)'
        '$(make_box "$(gettext  "Bare HTML Viewer")" BAREHTMLVIEWER internet)'
        <vbox space-expand="true" space-fill="true">
          <text space-expand="true" space-fill="true"><label>""</label></text>
        </vbox>
      </frame>
    </hbox>
  </vbox>


  <timer visible="false">
    <variable export="false">TIMER</variable>
    <action>refresh:UPDATE_ITEMS</action>
  </timer>
  <checkbox visible="false">
    <variable>UPDATE_ITEMS</variable>
    <input file>/tmp/puppyapps_refreshitems</input>
    <action>if true refresh:ARCHIVER</action>
    <action>if true refresh:AUDIOEDITOR</action>
    <action>if true refresh:AUDIOMIXER</action>
    <action>if true refresh:AUDIOPLAYER</action>
    <action>if true refresh:BAREHTMLVIEWER</action>
    <action>if true refresh:BROWSER</action>
    <action>if true refresh:CALENDAR</action>
    <action>if true refresh:CDPLAYER</action>
    <action>if true refresh:CDRECORDER</action>
    <action>if true refresh:CHAT</action>
    <action>if true refresh:CHMVIEWER</action>
    <action>if true refresh:CONNECT</action>
    <action>if true refresh:CONTACT</action>
    <action>if true refresh:DRAW</action>
    <action>if true refresh:EMAIL</action>
    <action>if true refresh:FILEMANAGER</action>
    <action>if true refresh:HTMLEDITOR</action>
    <action>if true refresh:HTMLVIEWER</action>
    <action>if true refresh:IMAGEEDITOR</action>
    <action>if true refresh:IMAGEVIEWER</action>
    <action>if true refresh:MEDIAPLAYER</action>
    <action>if true refresh:MUSICPLAYER</action>
    <action>if true refresh:PAINT</action>
    <action>if true refresh:PDFVIEWER</action>
    <action>if true refresh:PROCESSMANAGER</action>
    <action>if true refresh:SCREENSHOT</action>
    <action>if true refresh:RUN</action>
    <action>if true refresh:SEARCH</action>
    <action>if true refresh:SPREADSHEET</action>
    <action>if true refresh:TERMINAL</action>
    <action>if true refresh:TEXTEDITOR</action>
    <action>if true refresh:TEXTVIEWER</action>
    <action>if true refresh:WORDPROCESSOR</action>
    <action>if true echo false > /tmp/puppyapps_refreshitems</action>
    <action>disable:TIMER</action>
  </checkbox>


  <hbox space-expand="false" space-fill="false">
    <button space-expand="false" space-fill="false">
      '"`/usr/lib/gtkdialog/xml_button-icon help`"'
      <label>"'$(gettext 'Help')'"</label>
      <action>/usr/lib/gtkdialog/box_help "'$(gettext 'Default apps')'" &</action>
    </button>
    <button space-expand="false" space-fill="false">
      '"`/usr/lib/gtkdialog/xml_button-icon info`"'
      <label>"'$(gettext 'List active apps')'"</label>
      <action>list_active</action>
    </button>
    <text width-request="200" space-expand="true" space-fill="true"><label>""</label></text>
    <button>
      '"`/usr/lib/gtkdialog/xml_button-icon cancel`"'
      <label>"'$(gettext 'Cancel')'"</label>
      <action type="exit">EXIT_NOW</action>
    </button>
    <button>
      '"`/usr/lib/gtkdialog/xml_button-icon apply`"'
      <label>"'$(gettext 'Apply')'"</label>
      <action>update_defaults $newroot &</action>
      <action type="exit">OK</action>
    </button>
    '"`/usr/lib/gtkdialog/xml_scalegrip`"'
  </hbox>
</vbox>
</window>'

# load the app
. /usr/lib/gtkdialog/xml_info gtk #build bg_pixmap for gtk-theme
gtkdialog -p GUI
unset GUI

exit 0
