#!/bin/sh
#This will repack the builtin package into pet package
#It is based from remove_builtin script

[ "`whoami`" != "root" ] && exec sudo -A ${0} ${@} #110505

GTKVERLIST='1.0 2.0 3.0'

export TEXTDOMAIN=remove_builtin
export TEXTDOMAINDIR=/usr/share/locale
export OUTPUT_CHARSET=UTF-8
eval_gettext () {
  local myMESSAGE=$(gettext "$1")
  eval echo \"$myMESSAGE\"
}
export LANGORG=$LANG

Yes_lbl="$(gettext 'Yes')"
No_lbl="$(gettext 'No')"

MSG1="`gettext \"Simple utility to 'repack' packages that are builtin\nto the read-only .sfs file (Squashfs filesystem)\"`"

#!/bin/sh
D=$HOME/.packages/builtin_files

while [ 1 ];do
 FIXMENU='no' #101222
 PKGS=`ls -1 $D`
 PKG=`Xdialog --left --screen-center --backtitle "${MSG1}" --title "$(gettext 'Repack builtin packages')" --stdout --help "$(gettext "In all modes of running Puppy, other than a full hard-drive installation,\n
all of the Puppy files are in a compressed read-only file named 'puppy.sfs'\n
or 'wary_500.sfs' (or some similar name).\nThis tool will actually create a pet package version of builtin apps\n\n
Technical note: the lists of builtin files is at /var/petget/builtin_files,\n
        the list of builtin pkgs is in /var/petget/woof-installed-packages.")" --combobox "$(gettext 'Select package to remove:')" 0 0 $PKGS`
 if [ "$PKG" ];then
  aREGEX="|${PKG}|"
  aREGEX2="${PKG}|"
  DESCR="`grep "$aREGEX" /var/petget/woof-installed-packages |cut -d '|' -f 10`"
  
  [ "$DESCR" == "" ] && DESCR="`grep "$aREGEX2" /var/petget/woof-installed-packages | cut -f 10 -d'|'`"
  
  Xdialog --left --screen-center --backtitle "$(gettext 'Confirm that you want to repack') '${PKG}'" --title "$(gettext 'Repack builtin packages')" --ok-label "$Yes_lbl" --cancel-label "$No_lbl" --yesno "$(gettext 'Description of package:')\n
\n${DESCR}\n\n
$(gettext 'Continue?')" 0 0

retval1=$?

  if [ $retval1 -eq 0 ];then
  
   [ "`grep '\.desktop$' ${D}/${PKG}`" != "" ] && FIXMENU='yes' #101222
     
    if [ ! -d /tmp/${PKG} ]; then
     mkdir /tmp/${PKG}
    fi
  
   /usr/lib/gtkdialog/box_splash -close never -text "Repacking $PKG..." &
   xPID=$!
   
   for x in `cat $D/$PKG`
   do 
	   if [ -d $x ]; then
	   cd $x
	   else	   
		   path1=`pwd`
		   cp --parents -rf $path1/$x /tmp/${PKG}/
	   fi
   done
    
   prechar="+"
         
   reg1=`cat /var/petget/woof-installed-packages | grep "|${PKG}|" | grep -v "$prechar${PKG}"`
   reg2=`cat /var/petget/woof-installed-packages | grep "${PKG}|" | grep -v "$prechar${PKG}"`
   
   echo "... $reg1" 
   
   if [ "$reg1" != "" ]; then
    echo "$reg1" > /tmp/${PKG}/pet.specs
   else
    echo "$reg2" > /tmp/${PKG}/pet.specs
   fi
   
   cd /tmp
   
   tar -cf "${PKG}.tar" "./${PKG}"
   gzip "./${PKG}.tar"
   tgz2pet "./${PKG}.tar.gz"
   
   if [ ! -d /root/builtin-pkg ]; then
    mkdir /root/builtin-pkg
   fi
   
   mv "/tmp/${PKG}.pet" "/root/builtin-pkg/${PKG}.pet"
   
   rm -rf /tmp/${PKG}
   
   kill $xPID
   
    MSG1="`eval_gettext \"Package '\\\${PKG}' was repacked (located at $HOME/builtin-pkg). Choose another...\"`"
   
  fi
 else
  break
 fi   
done
