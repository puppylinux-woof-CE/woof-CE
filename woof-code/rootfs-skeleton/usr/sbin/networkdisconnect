#!/bin/sh
#(c) Copyright Barry Kauler Dec. 2010, License: GPL v3 /usr/share/doc/legal
#called from pupdial.
#got code out of rc.shutdown.
#shutdown network interfaces, except for ppp

# Disconnect ethernet/wifi connection using previous exec (default),
# because usually called by new current network exec.
# Optional single argument:
#  --current-exec       disconnect with current exec (for hostname-set)

#100814 log the cumulative bytes transmitted on network...
# (see also /etc/rc.d/rc.sysinit and network_tray)
#170329 use network choice instead of default, in case multiple setups tried.
#170412 Deactivate frisbee; convert to case structure. 
#170724 accommodate absence of a current exec, for default eth0.
#180214 stop all ethernet interfaces after current connection terminated.
#180919 add peasywifi support.
#180923 move network wizard.
#181209 add argument for use by rc.shutdown, for treatment of frisbee.
#200206 replace deprecated ifconfig & iwconfig with busybox ip & full iw.
#200425 add invocation of SNS rc.network; pause before checking for other links (timing issue). 

CURRENT_EXEC='' #170724
if [ -f /root/.connectwizardrc ];then #170724
 . /root/.connectwizardrc #sets CURRENT_EXEC 170329...
fi #170724

ARGUMENT="$1"
case "$ARGUMENT" in
 --current-exec|--shutdown) #181209
  DISCONNECTEXEC="$CURRENT_EXEC"
  ;;
 *)
  DISCONNECTEXEC="`cat /tmp/.connectwizard_previous_exec 2> /dev/null`"
  [ -z "$DISCONNECTEXEC" ] && DISCONNECTEXEC="$CURRENT_EXEC"
  [ -z "$DISCONNECTEXEC" ] \
   && DISCONNECTEXEC="`cat /usr/local/bin/defaultconnect | tail -n 1 | tr -s " " | cut -f 2 -d " "`"
  ;;
 esac #170329 end

ETHERNETDIR=network_ethernet
ACTIVE_INTERFACE=""
[ -f /tmp/sns_interface_success ] && ACTIVE_INTERFACE="`cat /tmp/sns_interface_success`" #SNS
[ ! "$ACTIVE_INTERFACE" ] && ACTIVE_INTERFACE="`ip link show | grep -B 1 'link/ether' | grep -w 'UP' | cut -f 2 -d ' ' | tr -d : | head -n 1`" #200206
if [ "$ACTIVE_INTERFACE" ];then
 if [ -d /sys/class/net/${ACTIVE_INTERFACE}/statistics ];then
  RX_BYTES="`cat /sys/class/net/${ACTIVE_INTERFACE}/statistics/rx_bytes`"
  TX_BYTES="`cat /sys/class/net/${ACTIVE_INTERFACE}/statistics/tx_bytes`"
  echo -n "$RX_BYTES" > /var/local/$ETHERNETDIR/rx_bytes_session
  echo -n "$TX_BYTES" > /var/local/$ETHERNETDIR/tx_bytes_session
  RX_BYTES_MONTH=`cat /var/local/$ETHERNETDIR/rx_bytes_month`
  RX_BYTES_MONTH=`expr $RX_BYTES_MONTH + $RX_BYTES`
  echo -n "$RX_BYTES_MONTH" > /var/local/$ETHERNETDIR/rx_bytes_month
  TX_BYTES_MONTH=`cat /var/local/$ETHERNETDIR/tx_bytes_month`
  TX_BYTES_MONTH=`expr $TX_BYTES_MONTH + $TX_BYTES`
  echo -n "$TX_BYTES_MONTH" > /var/local/$ETHERNETDIR/tx_bytes_month
 fi
fi
unset ETHERNETDIR

[ "`pidof wpa_supplicant`" != "" ] \
 && wpa_cli terminate #100309 kills any running wpa_supplicant.
case "$DISCONNECTEXEC" in #170412...
 peasywifi) #180919...
  /usr/local/peasywifi/rc.network stop
  sleep 0.1
  if [ -n "$(ps --no-headers -fC udhcpc,wpa_supplicant)" ];then
    # 'stop' option ignored in peasywifi rc.network - workaround:
    /etc/rc.d/rc.network_pwf_stop
  fi
  ;;
 sns) #200425...
  /usr/local/simple_network_setup/rc.network stop
  ;;
 net-setup.sh)
  /usr/local/network-wizard/rc.network stop #180923
  ;;
 frisbee) #180214...
  if frisbee --test_active; then
   frisbee --disconnect
   [ "$ARGUMENT" != '--shutdown' ] && frisbee --deactivate #181209
  fi
  ;;
 connman|connmand)
  killall connmand 2>/dev/null
  ;;
  nm|network-manager) #200425...
  
  ls -1 /etc/NetworkManager/system-connections > /tmp/nm-lists

  while read con1
  do
   if [ "$con1" != "" ]; then
    bname="$(basename "$con1" .nmconnection)"
    if [ "$(cat "/etc/NetworkManager/system-connections/$con1" | grep "type=wifi")" != "" ] && [ "$(cat "/etc/NetworkManager/system-connections/$con1" | grep "mode=ap")" == "" ]; then
     if [ "$(cat "/etc/NetworkManager/system-connections/$con1" | grep "autoconnect=false")" == "" ]; then
      nmcli con modify "$bname" connection.permissions ''
     fi
    fi
   fi
  done < /tmp/nm-lists
  
  rm -f /tmp/nm-lists
  
  #extracted from init.d script
  
  PIDFILE=/var/run/NetworkManager/NetworkManager.pid
  
  echo -en "Stopping NetworkManager: "
  # Shut down any DHCP connections, otherwise the processes will be orphaned
  # and the connections will not come up when NetworkManager restarts.
  if ps ax | grep /sbin/dhcpcd | grep -q libexec/nm-dhcp ; then
    ps ax | grep /sbin/dhcpcd | grep libexec/nm-dhcp | while read line ; do
      kill -HUP $(echo $line | cut -b 1-5)
    done
  fi
  if ps ax | grep /sbin/dhclient | grep -q /var/lib/NetworkManager ; then
    ps ax | grep /sbin/dhclient | grep /var/lib/NetworkManager | while read line ; do
      kill -HUP $(echo $line | cut -b 1-5)
    done
  fi
  pidlist=`cat $PIDFILE 2>/dev/null`
  if [ ! -z "$pidlist" ]; then
    kill $pidlist &>/dev/null
    sleep 3
    rm -f $PIDFILE &>/dev/null
  fi
  # If wpa_supplicant is running here, it needs to be shut down as well.
  # Since you're asking for NetworkManager to shut down, we have to assume
  # that wpa_supplicant was started by it.
  if [ -r /var/run/wpa_supplicant.pid ]; then
    kill $(cat /var/run/wpa_supplicant.pid)
  elif [ -r /run/wpa_supplicant.pid ]; then
    kill $(cat /run/wpa_supplicant.pid)
  fi
  echo "stopped";
  sleep 3
  
  ;;
esac #170309

sleep 0.1 #200425
for ONENETIF in `ip link show | grep -B 1 'link/ether' | grep -w 'UP' | cut -f 2 -d ' ' | tr -d : | tr '\n' ' '`; do #200206
 ip link set $ONENETIF down 2> /dev/null #200206
 iw dev ${ONENETIF} info 2> /dev/null | grep -qw "ssid" \
  && iw dev $ONENETIF connect off #100309 200206
 dhcpcd --release $ONENETIF 2>/dev/null #100309
done #180214 end

###END###
