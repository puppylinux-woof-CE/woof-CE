#some more functions called from boot scripts in Puppy4...
#101120 new firmware_tarball_func, as /sbin/pup_event_backend_modprobe rewritten.
#110722 usb drive, LED light briefly flashes after unmounted, so wait a bit. 110828 remove.
#120209 slight changes so that SSS mechanism can substitute translations. (see /usr/share/sss/script_strings)
#120828 rerwin: record firmware installed in /etc/modules/firmware.dep.inst.${KERNVER}
#120828 grep needs -E option, as expression is extended regular expression.
#120831 rerwin: Obtain firmware from all-firmware directories as well as tarballs.
#121004 rerwin: /etc/modules/firmware.dep.inst.${KERNVER} now has names of firmware tarballs, not modules.

#101119 called from rc.sysinit... 2013-11-16 similar function in pup_event_backend_modprobe
#global $MODULE is name of module, global $KERNVER.
firmware_tarball_func() {
 MODULEx="`echo -n "$MODULE" | tr '_' '-'`"
#121004 ...
 fPATTERN='[:,]'"${MODULE}"'\.ko|[:,]'"${MODULEx}"'\.ko'
 FIRMPKG="`cat /etc/modules/firmware.dep.${KERNVER}  | grep -v '^#' | grep ':' | grep -E "$fPATTERN" | cut -f 1 -d ':' | head -n 1`"
 if [ "$FIRMPKG" != "" ];then
  iPATTERN='^'"${FIRMPKG}"'$'
  if [ "`grep "$iPATTERN" /etc/modules/firmware.dep.inst.${KERNVER}`" = "" ];then
   #120831 rerwin: ...
   FLAGFIRM='no'
   if [ -d /lib/modules/all-firmware/${FIRMPKG} ];then #support firmware directories.
    cp -a -f --remove-destination /lib/modules/all-firmware/${FIRMPKG}/* /
    FLAGFIRM='yes'
   else
    if [ -f /lib/modules/all-firmware/${FIRMPKG}.tar.gz ];then
     tar -z -x --strip=1 --directory=/ -f /lib/modules/all-firmware/${FIRMPKG}.tar.gz > /dev/null 2>&1
     FLAGFIRM='yes'
    fi
   fi
   if [ "$FLAGFIRM" = "yes" ];then #120831 end
    #execute any post-install script...
    if [ -f /pinstall.${FIRMPKG}.sh ];then
     BRKCNT=0; SLEEPU=$((${$} * 10))
     while [ 1 ];do #serialise execution of pinstall scripts...
      PINSTALLCNT=`find / -maxdepth 1 -type f -name 'pinstall.*.sh' | wc -l`
      [ $PINSTALLCNT -eq 1 ] && break
      usleep $SLEEPU
      BRKCNT=$(($BRKCNT + 1))
      [ $BRKCNT -gt 5 ] && break
     done
     #120828 remove...
     #echo "$MODULE" >> /etc/modules/firmware.dep.inst.${KERNVER}
     cd /
     /pinstall.${FIRMPKG}.sh >/dev/null 2>&1
     rm -f /pinstall.${FIRMPKG}.sh >/dev/null 2>&1
    fi
    echo "$FIRMPKG" >> /etc/modules/firmware.dep.inst.${KERNVER} #120828
   fi
  fi
 fi
}
