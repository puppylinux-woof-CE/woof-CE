#!/bin/sh

function __help() {
	script="${0##*/}"
	echo " $script - Parse and format blkid's output"
	echo
	echo " Syntax: "
	echo "   $script [option] [device]"
	echo 
	echo " If no [option] is given, the output will have this format:"
	echo "    device|type|uuid|label"
	echo
	echo " The older blkid is, the less information it will give"
	echo
	echo " These options are useful for a specific [device]"
	echo "   -type   print filesystem (drives: partition_table_type)"
	echo "   -uuid   print filesystem_UUID (drives: partition_table_id)"
	echo "   -label  print label"
	echo "   -puuid  print partition_UUID"
	echo
	echo " These options are useful to get simple lists"
	echo "   -dtype  print device|filesystem (drives: partition_table_type)"
	echo "   -duuid  print device|UUID  (drives: partition_table_id)"
	echo "   -dlabel print device|label"
	echo "   -dpuuid print device|partition_UUID"
	echo
	echo " If no [device] is specified then all partitions recognized"
	echo " by blkid will be printed according to the rules above"
	echo
}

#########################################

output=1
 
function ParseBlkid() {
	local device=${1%:} uuid partuuid type label
	local name=${device##*/}
	shift
	for i in $@ ; do
		case $1 in
			UUID=*) uuid=${1#UUID=} ; uuid=${uuid//\"/} ;;
			TYPE=*) type=${1#TYPE=} ; type=${type//\"/} ;;
			PARTUUID=*) partuuid=${1#PARTUUID=} ; partuuid=${partuuid//\"/} ;;
			LABEL=*)
				label=${1#LABEL=\"}
				#label may have more than 1 word
				while [[ $label != *\" ]] ; do
					shift
					label+=" $1"
				done
				label=${label//\"/}
				;;
			## drives
			PTUUID=*) uuid=${1#PTUUID=} ; uuid=${uuid//\"/} ;; #partition table id
			PTTYPE=*) type=${1#PTTYPE=} ; type=${type//\"/} ;; #partition table type
		esac
		shift
	done

	case $output in
		1) echo "${device}|${type}|${uuid}|${label}" ;; #|$partuuid
		2) echo "${type}"  ;;
		3) echo "${uuid}"  ;;
		4) echo "${label}" ;;
		5) echo "${partuuid}" ;;
		6) echo "${device}|${type}"  ;;
		7) echo "${device}|${uuid}"  ;;
		8) echo "${device}|${label}" ;;
		9) echo "${device}|${partuuid}" ;;
	esac
}

#########################################

[ "$1" = "-busybox" ] && b=busybox && shift
case $1 in
	-type)   output=2 ; shift ;;
	-uuid)   output=3 ; shift ;;
	-label)  output=4 ; shift ;;
	-puuid)  output=5 ; shift ;;
	-dtype)  output=6 ; shift ;;
	-duuid)  output=7 ; shift ;;
	-dlabel) output=8 ; shift ;;
	-dpuuid) output=9 ; shift ;;
	-h|-help|--help) __help ; exit ;;
	-*) echo "Invalid option: $1" ; exit 1;;
esac

if [ "$1" ] ; then
	if [ ! -b "$1" ] ; then
		echo "ERROR: $1 is not a block device" >&2
		exit 1 
	fi
	$b blkid $@ | while read line ; do ParseBlkid $line ; done
else
	$b blkid $@ | while read line ; do
		ParseBlkid $line
	done | grep -v -E '/dev/loop'	
fi

### END ###