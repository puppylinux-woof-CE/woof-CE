Woof-CE (woof-Community Edition) is  a fork of Barry Kauler's woof2 fossil

These are some prominent changes that happened since WOOF was forked:
- kernel-kit
  * Build a woofce kernel the easy way
  * It will patch the kernel with aufs so you don't have to
  * You just need a proper kernel .config file
  * Includes woofce .config files ready to use
- Support for fatdog-like "huge" kernels
  * An alternative to the old method
    but increases complexity (alternative 3builddistro, init, rc.sysinit)
  * A "huge" kernel brings more stability to the running system
- Creation of woof-code/rootfs-packages
  * These packages are maintained by woofce contributors
- New gui scripts located in /usr/lib/gtkdialog
  * These scripts are heavily used in woofce
  * Read each script description to understand how it works or
    see the examples everywhere to just reuse
- GUI redesign
  * GUI apps have a new look and feel
- New save to directory feature
  * This way you can use a whole partition for a puppy frugal install
  * It's the closest thing to a full install


Woof-CE v1.0 (work in progress)
------------
In this release there have been many important changes.
-
- No longer using IDSTRING to identify a Puppy
- 
- init script (intramfs)
  * Major rewrite
  * Proper localization support. At the beginning of the script
    there is a section you can copy and paste in /locale/<locale>/init.mo
    You can contribute initrd translations directly to woofce.
    You are encouraged to do so..
  * Proper support for adrv, ydrv, zdrv, fdrv
  * Does not handle extrasfs's
  * Simplified searching of puppy files
  * Boot paramaters for puppy files accept label and uuid
  * Detailed info in initrd-progs/0initrd/README.txt
- initrd-progs (new)
  * Here you can find the initrd skeleton, init script and pkgs.
  * With this you can compile static apps for the initrd
    and create initrd.gz automatically.
  * Used by 3builddistro
  * See README file for more details
- kernel-kit
  * It can detect the aufs version automatically
  * Only fatdog-like kernels are supported
  * Minor improvements
  * See README file for more info
- build scripts
  * Major cleanup
  * Only fatdog-like kernels are supported
  * SFS files: No longer support 'simplified' filenames..
    only 'traditional' (see woof-code/README.txt)
  * Now you can build puppies way faster
  * Now you can download specific packages (./1download <pkg>)
  * Support for redhat based distros/arch was dropped
  * Support for old T2 puppies was dropped
  * Debian/Ubuntu/etc multiarch versions are supported
  * Deleted some scripts that were deemed no longer appropriate.
  * Fixed some outdated templates
System:
- BaCon apps face extinction
- Cleanup and fixes for some core scripts such as
  rc.sysinit, rc.update, rc.shutdown, xwin, bootmanager, etc.
- New and simple xorgwizard
  * Dropped used of ddcprobe, which rendered the old xorg wizard unusable
  * There is a more generic xorg.conf template.
    This means xorg itself detects the video driver when it's running..
    xorg is wise enough to detect the correct video driver.
  * New xorg.conf template to be used with xorg evdev driver
    usually this works in conjuction with udev (eudev)
    - xorg.conf.udev is used automatically when
      a touchscreen is detected, otherwise the system
      will pick a differente xorg.conf template..
  * There is a mechanism to install an alternative xorg on first boot
    if that xorg version has been included and puppy is configured
    to offer that option.
  * With the xorgwizard GUI you can adjust the following settings:
    + Screen resolution
    + Color bit depth
    + Other misc options
  * With xorgwizard-cli you can adjust the following settings:
    + Video driver
    + Screen resolution
    + Color bit depth
    + Reset xorg.conf
    + Install alternative xorg version (see above)
    @ You can force xorgwizard-cli on first boot or when
      the xorg.conf does not exist by doing this:
      - /etc/DISTRO_SPECS: DISTRO_XORG_AUTO='no'
      - flag file: /var/local/xwin_no_xorg_auto_flag
  * You can still tweak xorg.conf to your liking
- Multiple Sound Card wizard
  * Now part of the base system
  * Completely rewritten for woofce
- sfs_load
  * Now part of the base system
  * sfs_load has been adapted for the new init
  * Boot Manager does not include code for the extrasfs's anymore
  * Now there is only one mechanism to load the extrasfs's: sfs_load
- underdog
  * Try the new underdog gui (for advanced users)
  * You will see it in Boot Manager after creating a pupsave in a frugal install
- pupswap
  * An automated method to create and load swapfiles
  * This only works if you don't have swap partitions
  * It will be called on first shutdown (gui/cli)
    if you don't have a swap partition.
  * In a full install, it will be shown on first boot
    if you don't have a swap partition.
  * Find it in Boot Manager
- new probedisk script
  * With more options, see the script itself..
- custom update-pciids and update-usbids
  * Located in /sbin
  * Update databases used by lspci and lsusb
  * Can be used with chroot or part of the woof process or something..
- a more up-to-date input wizard
- development scripts:
  * new edit-initramfs: click on initrd.gz and add/edit/remove stuff.
  * gitrepo: automatically set up a local repo of woofce
  * checkdeps /: for the puppy builders.. easy way to detect missing deps
- gettext is optional
  * There are simple scripts in /usr/local/bin that get used
    when gettext has not been installed or is missing files..
  * The scripts just echo lines..
- puppyinstaller
  * 
