#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

# 2createpackages
STRIP_BINARIES=no

## UnionFS: aufs or overlay
UNIONFS=overlay

## Kernel tarballs repo URL for choosing/downloading kernel
KIT_KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

### Kernel tarball URL - avoid being asked questions about downloading/choosing a kernel
KERNEL_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/huge-5.10-dpupbullseye64.tar.bz2

## an array of generically named programs to send to the ADRIVE, FDRIVE, YDRIVE
## ADRV_INC="abiword gnumeric goffice"
ADRV_INC="firefox galculator"
## YDRV_INC=""
YDRV_INC=""
## FDRV_INC="" #this one is very experimental and it's recommended to be left unset
FDRV_INC=""

## Include kernel-kit generated FDRIVE
## set to yes or no or leave commented to be asked the question at build time
#KFDRIVE=no

## build devx? yes/no - any other value = ask
BUILD_DEVX=yes

## include devx SFS in ISO?
DEVX_IN_ISO=no

## build missing packages from source? yes/no
PETBUILDS=yes

## Include the windows puppy installer LICK by Luke Lorimer aka <noryb009>
LICK_IN_ISO=yes

## compression method to be used (SFS files)
#SFSCOMP='-comp xz -Xbcj x86 -b 512K'
#SFSCOMP='-comp xz -Xbcj arm,armthumb -b 512K'
#SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'
SFSCOMP='-comp zstd -Xcompression-level 19 -b 512K -no-exports -no-xattrs'

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=no

## -- pTheme -- applies only if ptheme pkg is being used
##    woof-code/rootfs-packages/ptheme/usr/share/ptheme/globals
## You can choose a ptheme here if you wish
## otherwise 3builddistro will ask you to choose one
#PTHEME="Dark Touch"
#PTHEME="Dark Mouse"
#PTHEME="Bright Touch"
#PTHEME="Bright Mouse"
#PTHEME="Dark_Blue"
PTHEME="431"

## XERRS_FLG if set to 'yes' enables logging of X errors in /tmp/xerrs.log
## if unset or or any value other than 'yes' X logging is disabled. User can change this in 'Startup Manager'
## For testing builds XERRS_FLG=yes is recommended. If the target device is low RAM suggest to leave this unset, especially for release
XERRS_FLG=yes

## include Pkg in build (y/n). If commented then asked in 3builddistro
INCLUDE_PKG=n

## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS="
defaultconnect=sns
"

## -- NON-FREE firmware --
## this downloads and installs to fdrive firmwares that
## may be needed by the kernel drivers (wireless + dvb).
## a yes or no val to NONFREE_FW is needed to automate build
## Note 0: FDRV_INC= must be unset
## Note 1: see the file support/fw.conf for configuration
## Note 2: if you select b43* (any) in the fw.conf then b43-fwcutter
## is downloaded, compiled and installed if you don't already have it
## Note 3: if nouveau=true then a python script 'extract_firmware.py'
## is downloaded along with the full nvidia driver. It may take a while.
## Note 4: you can choose to keep downloaded binaries if you set the
## 'save_dld=true' var in fw.conf. They'll be used next time instead
## of downloading them again.
NONFREE_FW=yes

## -- EXTRA FLAG --
## This allows some customisation for the iso name
## eg: slacko64-6.9.9.1-uefi-k3.16.iso
## where XTRA_FLG='-k3.16' (the dash is a requirement)
#XTRA_FLG=''

## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS="
chroot . /usr/sbin/firewall_ng enable
sed s~Exec=/usr/lib/firefox-esr/firefox-esr~Exec=firefox-esr~ -i ../adrv/usr/share/applications/firefox-esr.desktop
touch usr/bin/firefox-esr
chroot . /usr/sbin/setup-spot firefox-esr=true
mv -f ../adrv/usr/bin/firefox-esr{,.bin}
mv -f usr/bin/firefox-esr ../adrv/usr/bin/
rm -f usr/bin/firefox-esr.bin
touch usr/bin/sylpheed
chroot . /usr/sbin/setup-spot sylpheed=true
mv -f ../adrv/usr/bin/sylpheed{,.bin}
mv -f usr/bin/sylpheed ../adrv/usr/bin/
rm -f usr/bin/sylpheed.bin
touch usr/bin/transmission-gtk
chroot . /usr/sbin/setup-spot transmission-gtk=true
mv -f ../adrv/usr/bin/transmission-gtk{,.bin}
mv -f usr/bin/transmission-gtk ../adrv/usr/bin/
rm -f usr/bin/transmission-gtk.bin
"
