#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

# 2createpackages
STRIP_BINARIES=no

## UnionFS: aufs or overlay
UNIONFS=overlay

## Kernel tarballs repo URL for choosing/downloading kernel
KIT_KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

### Kernel tarball URL - avoid being asked questions about downloading/choosing a kernel
#KERNEL_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/huge-5.10-kernel-kit.tar.bz2

## an array of generically named programs to send to the ADRIVE, FDRIVE, YDRIVE
## ADRV_INC="abiword gnumeric goffice"
ADRV_INC="firefox-esr galculator libavcodec libva geany gpicview lxtask mtpaint transmission xarchiver"
## YDRV_INC=""
YDRV_INC=""
## FDRV_INC="" #this one is very experimental and it's recommended to be left unset
FDRV_INC=""

## Include kernel-kit generated FDRIVE
## set to yes or no or leave commented to be asked the question at build time
#KFDRIVE=no

## build devx? yes/no - any other value = ask
BUILD_DEVX=yes

## include devx SFS in ISO?
DEVX_IN_ISO=no

## packages to build from source
PETBUILDS="busybox aaa_pup_c cage disktype dmz-cursor-theme firewallstatus freememapplet geany gexec gpicview gtkdialog gtk_theme_flat_grey_rounded gtk_theme_polished_blue gtk_theme_gradient_grey gxmessage jwm l3afpad libicudata_stub lxtask lxterminal mtpaint pa-applet powerapplet_tray rxvt-unicode transmission xarchiver xcur2png xdelta xdg-puppy-jwm Xdialog xlockmore yad pmaterial_icons puppy_standard_icons ram-saver connman-ui labwc xdg-puppy-labwc pcmanfm pupmoon-font yambar connman-gtk"

## GTK+ version to use when building packages that support GTK+ 2
PETBUILD_GTK=3

## Include the windows puppy installer LICK by Luke Lorimer aka <noryb009>
LICK_IN_ISO=yes

## compression method to be used (SFS files)
#SFSCOMP='-comp xz -Xbcj x86 -b 512K'
#SFSCOMP='-comp xz -Xbcj arm,armthumb -b 512K'
#SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'
SFSCOMP='-comp zstd -Xcompression-level 19 -b 256K -no-exports -no-xattrs'

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=no

## -- pTheme -- applies only if ptheme pkg is being used
##    woof-code/rootfs-packages/ptheme/usr/share/ptheme/globals
## You can choose a ptheme here if you wish
## otherwise 3builddistro will ask you to choose one
#PTHEME="Dark Touch"
#PTHEME="Dark Mouse"
#PTHEME="Bright Touch"
#PTHEME="Bright Mouse"
#PTHEME="Dark_Blue"
PTHEME="412"

## XERRS_FLG if set to 'yes' enables logging of X errors in /tmp/xerrs.log
## if unset or or any value other than 'yes' X logging is disabled. User can change this in 'Startup Manager'
## For testing builds XERRS_FLG=yes is recommended. If the target device is low RAM suggest to leave this unset, especially for release
#XERRS_FLG=yes

## include Pkg in build (y/n). If commented then asked in 3builddistro
INCLUDE_PKG=y

## ucode.cpio initial ram disk with CPU bugfixes
## build the microcode initrd to mitigate aganst cpu bugs like spectre/meltdown
## You can specify 'amd' or 'intel' as args to latest_microcode.sh
## comment out to exclude bulding ucode.cpio
#UCODE_EXEC=../support/latest_microcode.sh amd
#UCODE_EXEC=../support/latest_microcode.sh intel
UCODE_EXEC=../support/latest_microcode.sh

## choice to build 64 bit support only for UEFI booting
## or 64 bit and 32 bit UEFI support
## if not set then only 64 bit support is builtin to the iso image
## which is the default
#UEFI_32=y

## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS=""

## PROMPT - change the CLI prompt to whatever you like. Default is unset
PROMPT='PS1="\w\$ "'

## -- EXTRA FLAG --
## This allows some customisation for the iso name
## eg: slacko64-6.9.9.1-uefi-k3.16.iso
## where XTRA_FLG='-k3.16' (the dash is a requirement)
#XTRA_FLG=''

## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS="
chroot . /usr/sbin/firewall_ng enable
[ -d ../adrv ] && sed s~Exec=/usr/lib/firefox-esr/firefox-esr~Exec=firefox-esr~ -i ../adrv/usr/share/applications/firefox-esr.desktop || sed s~Exec=/usr/lib/firefox-esr/firefox-esr~Exec=firefox-esr~ -i usr/share/applications/firefox-esr.desktop
[ -d ../adrv ] && touch usr/bin/firefox-esr
chroot . /usr/sbin/setup-spot firefox-esr=true
[ -d ../adrv ] && mv -f ../adrv/usr/bin/firefox-esr{,.bin}
[ -d ../adrv ] && mv -f usr/bin/firefox-esr ../adrv/usr/bin/
[ -d ../adrv ] && rm -f usr/bin/firefox-esr.bin
[ -d ../adrv ] && touch usr/bin/transmission-gtk
chroot . /usr/sbin/setup-spot transmission-gtk=true
[ -d ../adrv ] && mv -f ../adrv/usr/bin/transmission-gtk{,.bin}
[ -d ../adrv ] && mv -f usr/bin/transmission-gtk ../adrv/usr/bin/
[ -d ../adrv ] && rm -f usr/bin/transmission-gtk.bin
mv -f root/.spot-status root/.spot-status.orig
chroot . /usr/sbin/setup-spot powerapplet_tray=true
mv -f root/.spot-status.orig root/.spot-status
./usr/sbin/pup-advert-blocker start ./etc/hosts
mv root/Downloads home/spot/
chroot . chown -R spot:spot /home/spot/Downloads
ln -s ../home/spot/Downloads root/
rm -f usr/share/applications/pupX-X-settings.desktop usr/share/applications/Mouse-keyboard-Wizard.desktop usr/share/applications/Xorg-Video-Wizard.desktop usr/share/applications/BootManager-configure-bootup.desktop usr/share/applications/wallpaper.desktop usr/share/applications/FontManager.desktop usr/share/applications/Set-date-and-time.desktop usr/share/applications/Set-timezone.desktop usr/share/applications/ptheme.desktop
for i in usr/share/themes/*; do case \"\$i\" in usr/share/themes/Flat-grey-rounded|usr/share/themes/Polished-Blue|usr/share/themes/Gradient-grey) ;; *) rm -vrf \"\$i\" ;; esac; done
for i in usr/share/ptheme/globals/*; do case \"\$i\" in \"usr/share/ptheme/globals/Dark Gray\"|usr/share/ptheme/globals/431|usr/share/ptheme/globals/412) ;; *) rm -vf \"\$i\" ;; esac; done
rm -vf usr/share/backgrounds/*.jpg
rm -f etc/fonts/conf.d/10-hinting-slight.conf etc/fonts/conf.d/10-autohint.conf
ln -s /usr/share/fontconfig/conf.avail/10-hinting-none.conf etc/fonts/conf.d/
[ -f usr/bin/startxwayland ] && touch var/local/xwin_enable_xwayland
"
