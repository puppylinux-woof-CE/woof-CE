#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

# 2createpackages. binaries are usually already stripped. set to 'no' to speed up process
STRIP_BINARIES=yes

#xorg-autoconf from rizalmart - changes perms on /usr/sbin/xorg-autoconf to enable; default is unset
XAUTOCONF=yes

## Kernel tarballs repo URL for choosing/downloading kernel
KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

## Kernel tarball URL
## avoid being asked questions about downloading/choosing a kernel
#KERNEL_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/huge-3.14.55-slacko_noPAE.tar.bz2

## an array of generically named programs to send to the ADRIVE, FDRIVE, YDRIVE
## ADRV_INC="abiword gnumeric goffice"
ADRV_INC="abiword asunder claws-mail clipit conky conky-gtk deadbeef Dunst-config easytag eboardchess findnrun fpm2 galculator gatotray gdmap get_libreoffice gexec gftp gmeasures gnumeric goffice gogglesmm gplanarity gtkhash guvcview gview gwaveedit haiku hardinfo hexalate hexchat hiawatha homebank htop inkscapelite iqpuzzle isomaster ListDDF lxrandr notecase osmo PackIt palemoon pdvdrsab peasyport picpuz pmirrorget pnethood pplog psip PupClockset Pup-SysInfo qpdfview QtNote rubix simplegtkradio simplescreenrecorder simsu uextract uget UrxvtControl xvkbd yahtzeez geany gpicview lxtask mtpaint transmission-legacy xarchiver"
## YDRV_INC=""
YDRV_INC=""
## FDRV_INC="" #this one is very experimental and it's recommended to be left unset
FDRV_INC=""

## Include kernel-kit generated FDRIVE
## set to yes or no or leave commented to be asked the question at build time
#KFDRIVE=no

## Download and include custom SFS (XDRV_INC= overrides this)
#ADRV_SFS_URL=
#YDRV_SFS_URL=
#FDRV_SFS_URL=

## build devx? yes/no - any other value = yes
BUILD_DEVX=yes
# build docx, nlsx? yes/no - any other value = no
BUILD_DOCX=no
BUILD_NLSX=no

## include devx SFS in ISO?
DEVX_IN_ISO=no

## packages to build from source
PETBUILDS="busybox aaa_pup_c disktype dmz-cursor-theme firewallstatus freememapplet geany-gtk2 gexec gpicview gtkdialog gtk_theme_flat_grey_rounded gtk_theme_polished_blue gtk_theme_buntoo_ambience gtk_theme_stark_blueish gxmessage jwm leafpad lxtask lxterminal mtpaint connman-puppy connman-gtk connman-ui osmo pa-applet powerapplet_tray rox-filer rxvt-unicode transmission-legacy xarchiver xcur2png xdelta xdg-puppy-jwm Xdialog-legacy xlockmore yad pmaterial_icons puppy_flat_icons puppy_standard_icons notification-daemon-stub palemoon"

## GTK+ version to use when building packages that support GTK+ 2
PETBUILD_GTK=2

## Include the windows puppy installer LICK by Luke Lorimer aka <noryb009>
LICK_IN_ISO=yes

## compression method to be used (SFS files)
#SFSCOMP='-comp xz -Xbcj x86 -b 512K'
#SFSCOMP='-comp xz'
#SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'
#SFSCOMP='-comp zstd -Xcompression-level 19 -b 256K -no-exports -no-xattrs'
SFSCOMP='-comp xz -Xbcj x86 -b 256K -no-exports -no-xattrs'

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=no

## You can choose a theme here if you wish
## otherwise 3builddistro will ask you to choose one
THEME_WALLPAPER="431-dark.svg"
THEME_GTK2="Numix"
THEME_JWM="Numix"
THEME_JWM_BUTTONS="Buntu"
THEME_GTK_ICONS="PMaterial"
THEME_DESK_ICONS="PMaterial"
THEME_MOUSE="Breeze_Snow"

## include Pkg in build (y/n). If commented then asked in 3builddistro
INCLUDE_PKG=y

## ucode.cpio initial ram disk with CPU bugfixes
## build the microcode initrd to mitigate aganst cpu bugs like spectre/meltdown
## You can specify 'amd' or 'intel' as args to latest_microcode.sh
## comment out to exclude bulding ucode.cpio
#UCODE_EXEC=../support/latest_microcode.sh amd
#UCODE_EXEC=../support/latest_microcode.sh intel
UCODE_EXEC=../support/latest_microcode.sh

## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS="
defaultarchiver=
defaultaudioeditor=
defaultaudiomixer=
defaultaudioplayer=
defaultbrowser=
defaultcalendar=
defaultcdplayer=
defaultcdrecorder=
defaultchat=
defaultchmviewer=
defaultconnect=
defaultcontact=
defaultdraw=
defaultemail=
defaultfilemanager=
defaulthandler=
defaulthtmleditor=
defaulthtmlviewer=defaultbrowser
defaultimageeditor=
defaultimageviewer=
defaultmediaplayer=
defaultpaint=
defaultpdfviewer=
defaultprocessmanager=
defaultrun=
defaultscreenshot=
defaultspreadsheet=
defaultterminal=
defaulttexteditor=
defaulttextviewer=
defaulttorrent=
defaultwordprocessor=
"

## PROMPT - change the CLI prompt to whatever you like. Default is unset
#PROMPT='PS1="\w\$ "'
PROMPT=

## -- EXTRA FLAG --
## This allows some customisation for the iso name
## eg: slacko64-6.9.9.1-uefi-k3.16.iso
## where XTRA_FLG='-k3.16' (the dash is a requirement)
#XTRA_FLG=''
#sed -i 's/Height>22/Height>28/g' root/.jwm/jwmrc-personal
#sed -i 's/"24"/"MENHEIGHT"/g' etc/xdg/templates/_root_.jwmrc
#sed -i 's/"24"/"16"/g' /root/.jwmrc
#usr/lib/x86_64-linux-gnu/glib-2.0/glib-compile-schemas usr/share/glib-2.0/schemas || true
#usr/lib/x86_64-linux-gnu/glib-2.0/gio-querymodules usr/lib/x86_64-linux-gnu/gio/modules || true
## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS=""
