#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

# 2createpackages. binaries are usually already stripped. set to 'no' to speed up process
STRIP_BINARIES=yes

## UnionFS: aufs or overlay
UNIONFS=aufs

#xorg-autoconf from rizalmart - changes perms on /usr/sbin/xorg-autoconf to enable; default is unset
XAUTOCONF=yes

## Kernel tarballs repo URL for choosing/downloading kernel
KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

## Kernel tarball URL
## avoid being asked questions about downloading/choosing a kernel
#KERNEL_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/huge-3.14.55-slacko_noPAE.tar.bz2

## an array of generically named programs to send to the ADRIVE, FDRIVE, YDRIVE
## ADRV_INC="abiword gnumeric goffice"
ADRV_INC="abiword asunder claws-mail clipit conky conky-gtk deadbeef Dunst-config easytag eboardchess findnrun fpm2 galculator gatotray gdmap get_libreoffice gexec gftp gmeasures gnumeric goffice gogglesmm gplanarity gtkhash guvcview gview gwaveedit haiku hardinfo hexalate hexchat hiawatha homebank htop inkscapelite iqpuzzle isomaster ListDDF lxrandr notecase osmo PackIt palemoon pdvdrsab peasyport picpuz pmirrorget pnethood pplog psip PupClockset Pup-SysInfo qpdfview QtNote rubix simplegtkradio simplescreenrecorder simsu uextract uget UrxvtControl xvkbd yahtzeez"
## YDRV_INC=""
YDRV_INC=""
## FDRV_INC="" #this one is very experimental and it's recommended to be left unset
FDRV_INC=""

## Include kernel-kit generated FDRIVE
## set to yes or no or leave commented to be asked the question at build time
#KFDRIVE=no

## Download and include custom SFS (XDRV_INC= overrides this)
#ADRV_SFS_URL=
#YDRV_SFS_URL=
#FDRV_SFS_URL=

## build devx? yes/no - any other value = yes
BUILD_DEVX=yes
# build docx, nlsx? yes/no - any other value = no
BUILD_DOCX=no
BUILD_NLSX=no

## include devx SFS in ISO?
DEVX_IN_ISO=no

## build missing packages from source? yes/no
PETBUILDS=yes

## Include the windows puppy installer LICK by Luke Lorimer aka <noryb009>
LICK_IN_ISO=yes

## compression method to be used (SFS files)
#SFSCOMP='-comp xz -Xbcj x86 -b 512K'
#SFSCOMP='-comp xz'
#SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'
SFSCOMP='-comp zstd -Xcompression-level 19 -b 256K -no-exports -no-xattrs'

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=no

## -- pTheme -- applies only if ptheme pkg is being used
##    woof-code/rootfs-packages/ptheme/usr/share/ptheme/globals
## You can choose a ptheme here if you wish
## otherwise 3builddistro will ask you to choose one
#PTHEME="Dark Touch"
#PTHEME="Dark Mouse"
#PTHEME="Bright Touch"
#PTHEME="Bright Mouse"
#PTHEME="Dark_Blue"
PTHEME="431"

## include Pkg in build (y/n). If commented then asked in 3builddistro
INCLUDE_PKG=y
## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS="
defaultarchiver=
defaultaudioeditor=
defaultaudiomixer=
defaultaudioplayer=
defaultbrowser=
defaultcalendar=
defaultcdplayer=
defaultcdrecorder=
defaultchat=
defaultchmviewer=
defaultconnect=
defaultcontact=
defaultdraw=
defaultemail=
defaultfilemanager=
defaulthandler=
defaulthtmleditor=
defaulthtmlviewer=defaultbrowser
defaultimageeditor=
defaultimageviewer=
defaultmediaplayer=
defaultpaint=
defaultpdfviewer=
defaultprocessmanager=
defaultrun=
defaultscreenshot=
defaultspreadsheet=
defaultterminal=urxvt
defaulttexteditor=
defaulttextviewer=
defaulttorrent=
defaultwordprocessor=
"

## -- NON-FREE firmware --
## this downloads and installs to fdrive firmwares that
## may be needed by the kernel drivers (wireless + dvb).
## a yes or no val to NONFREE_FW is needed to automate build
## Note 0: FDRV_INC= must be unset
## Note 1: see the file support/fw.conf for configuration
## Note 2: if you select b43* (any) in the fw.conf then b43-fwcutter
## is downloaded, compiled and installed if you don't already have it
## Note 3: if nouveau=true then a python script 'extract_firmware.py'
## is downloaded along with the full nvidia driver. It may take a while.
## Note 4: you can choose to keep downloaded binaries if you set the
## 'save_dld=true' var in fw.conf. They'll be used next time instead
## of downloading them again.
NONFREE_FW=no

## PROMPT - change the CLI prompt to whatever you like. Default is unset
#PROMPT='PS1="\w\$ "'
PROMPT=

## -- EXTRA FLAG --
## This allows some customisation for the iso name
## eg: slacko64-6.9.9.1-uefi-k3.16.iso
## where XTRA_FLG='-k3.16' (the dash is a requirement)
#XTRA_FLG=''
#sed -i 's/Height>22/Height>28/g' root/.jwm/jwmrc-personal
#sed -i 's/"24"/"MENHEIGHT"/g' etc/xdg/templates/_root_.jwmrc
#sed -i 's/"24"/"16"/g' /root/.jwmrc
#usr/lib/x86_64-linux-gnu/glib-2.0/glib-compile-schemas usr/share/glib-2.0/schemas || true
#usr/lib/x86_64-linux-gnu/glib-2.0/gio-querymodules usr/lib/x86_64-linux-gnu/gio/modules || true
## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS=""
