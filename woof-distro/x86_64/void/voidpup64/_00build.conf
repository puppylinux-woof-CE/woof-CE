#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

# 2createpackages. binaries are usually already stripped. set to 'no' to speed up process
STRIP_BINARIES=no

## UnionFS: aufs or overlay
UNIONFS=aufs

#xorg-autoconf from rizalmart - changes perms on /usr/sbin/xorg-autoconf to enable; default is unset
XAUTOCONF=yes

## Kernel tarballs repo URL for choosing/downloading kernel
#KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

## Kernel tarball URL
## avoid being asked questions about downloading/choosing a kernel
#KERNEL_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/huge-3.14.55-slacko_noPAE.tar.bz2

## an array of generically named programs to send to the ADRIVE, FDRIVE, YDRIVE
## ADRV_INC="abiword gnumeric goffice"
ADRV_INC=""
## YDRV_INC=""
YDRV_INC=""
## FDRV_INC="" #this one is very experimental and it's recommended to be left unset
FDRV_INC=""

## Include kernel-kit generated FDRIVE
## set to yes or no or leave commented to be asked the question at build time
#KFDRIVE=no

## Download and include custom SFS (XDRV_INC= overrides this)
ADRV_SFS_URL=http://smokey01.com/peebee/voidpup/64/adrv_vpup64_22.02.sfs
#YDRV_SFS_URL=
FDRV_SFS_URL=http://smokey01.com/peebee/voidpup/64/fdrv_vpup64_22.02.sfs

## build devx? yes/no - any other value = yes
BUILD_DEVX=yes
# build docx, nlsx? yes/no - any other value = no
BUILD_DOCX=no
BUILD_NLSX=yes

EXTRA_PROCESSING="support/void/devx-hack.sh"

## include devx SFS in ISO?
DEVX_IN_ISO=no

## packages to build from source
#PETBUILDS="busybox aaa_pup_c disktype dmz-cursor-theme firewallstatus freememapplet geany gexec gpicview gtkdialog gtk_theme_flat_grey_rounded gtk_theme_polished_blue gtk_theme_gradient_grey jwm leafpad libicudata_stub lxtask lxterminal mtpaint netmon_wce powerapplet_tray rox-filer rxvt-unicode sylpheed transmission xarchiver xcur2png xdelta xdg-puppy-jwm Xdialog xlockmore yad pmaterial_icons puppy_flat_icons puppy_standard_icons"
PETBUILDS="busybox-void aaa_pup_c gtkdialog jwm rox-filer puppy_flat_icons puppy_standard_icons gtk_theme_flat_grey_rounded gtk_theme_gradient_grey gtk_theme_polished_blue xdg-puppy-jwm firewallstatus powerapplet_tray mtpaint xlockmore"

## GTK+ version to use when building packages that support GTK+ 2
PETBUILD_GTK=2

## Include the windows puppy installer LICK by Luke Lorimer aka <noryb009>
LICK_IN_ISO=no

## compression method to be used (SFS files)
SFSCOMP='-comp xz -Xbcj x86 -b 512K'
#SFSCOMP='-comp xz'
#SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=no

## -- pTheme -- applies only if ptheme pkg is being used
##    woof-code/rootfs-packages/ptheme/usr/share/ptheme/globals
#PTHEME="Dark_Blue"
#PTHEME="Original Pup"
PTHEME="431"

## XERRS_FLG if set to 'yes' enables logging of X errors in /tmp/xerrs.log
## if unset or or any value other than 'yes' X logging is disabled. User can change this in 'Startup Manager'
## For testing builds XERRS_FLG=yes is recommended. If the target device is low RAM suggest to leave this unset, especially for release
XERRS_FLG=no

## include Pkg in build (y/n). If commented then asked in 3builddistro
INCLUDE_PKG=n

## ucode.cpio initial ram disk with CPU bugfixes
## build the microcode initrd to mitigate aganst cpu bugs like spectre/meltdown
## You can specify 'amd' or 'intel' as args to latest_microcode.sh
## comment out to exclude bulding ucode.cpio
#UCODE_EXEC=../support/latest_microcode.sh amd
#UCODE_EXEC=../support/latest_microcode.sh intel
#UCODE_EXEC=../support/latest_microcode.sh

## choice to build 64 bit support only for UEFI booting
## or 64 bit and 32 bit UEFI support
## if not set then only 64 bit support is builtin to the iso image
## which is the default
#UEFI_32=y

## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS="
defaultarchiver=
defaultaudioeditor=
defaultaudiomixer=
defaultaudioplayer=
defaultbrowser=light
defaultcalendar=
defaultcdplayer=
defaultcdrecorder=
defaultchat=
defaultchmviewer=
defaultconnect=
defaultcontact=
defaultdraw=
defaultemail=
defaultfilemanager=roxfiler
defaulthandler=
defaulthtmleditor=geany
defaulthtmlviewer=light
defaultimageeditor=mtpaint
defaultimageviewer=viewnior
defaultmediaplayer=
defaultpaint=
defaultpdfviewer=evince
defaultprocessmanager=
defaultrun=
defaultscreenshot=tas
defaultspreadsheet=
defaultterminal=lxterminal
defaulttexteditor=geany
defaulttextviewer=geany
defaulttorrent=
defaultwordprocessor=
"

## -- EXTRA FLAG --
## This allows some customisation for the iso name
## eg: slacko64-6.9.9.1-uefi-k3.16.iso
## where XTRA_FLG='-k3.16' (the dash is a requirement)
#XTRA_FLG=''

## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS="
echo 'VoidPup64 System built on: $(date)' >> etc/system_build_date
cp etc/DISTRO_SPECS ../build
# copy adrv, fdrv into iso
cp ../*drv*.sfs ../build
#remove ppm from menu
rm usr/share/applications/petget.desktop
rm usr/share/applications/Puppy-package-manager.desktop
rm usr/share/applications/Puppy-package-manager-check-deps.desktop
#remove ppm databases
rm var/packages/Packages-puppy-slacko6414.2-official var/packages/Packages-puppy-vpup64-extra var/packages/Packages-void64-current
echo \"PKG_REPOS_ENABLED=\' Packages-puppy-noarch-official \'\" >> var/packages/PKGS_MANAGEMENT
# revert to combobox in quicksetup to give scrollable lists
sed -i 's%comboboxtext%combobox%g' usr/sbin/quicksetup
# set pup-event autoplay true - sadly not compatible with latest pmusic
# sed -i 's%HOTPLUGNOISY=false%HOTPLUGNOISY=true%' etc/eventmanager
echo "NoDisplay=true" >> usr/share/applications/config_libinput.desktop
ln -s p_config_libinput usr/local/bin/flsynclient
#CellWriter puppyfication
rm usr/share/applications/cellwriter.desktop usr/share/cellwriter/wordfreq
sed -i 's%--dock-window=1%--dock-window=0%' usr/bin/x-keyboard
#devx tidy
rm ../devx/*.plist ../devx/INSTALL ../devx/REMOVE
#new busybox from petbuild 140522
cp -vf ../../petbuild-output/busybox-void-latest/bin/* ./bin/
# 031122 PPM wrapper
mv usr/local/petget/pkg_chooser.sh usr/local/petget/pkg_chooser_orig.sh
mv usr/local/petget/ppm-wrapper usr/local/petget/pkg_chooser.sh
sed -i 's%ps --no-headers -C pkg_chooser%ps --no-headers -C pkg_chooser_orig%' usr/local/petget/pkg_chooser_orig.sh
rm usr/local/bin/ppm
ln -s ../petget/pkg_chooser_orig.sh usr/local/bin/ppm
# 260523 ghostscript update fix
ln -s libgs.so.10 usr/lib/libgs.so.9
# 110923 needed by pnscan
ln -s libnsl.so.3 usr/lib/libnsl.so.2
# PupControl
ln -s ../../sbin/ptheme /usr/local/jwm_config/pdesktop
# 311223 bodge?
mv usr/lib/libcrypt.so.1 usr/lib/libcryptzz.so.1
mv usr/lib/zzlibcrypt.so.1 usr/lib/libcrypt.so.1
"

