#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

#support/findpkgs (called by most scripts)
CHECK_PKG_DEPENDENCIES=yes

# 2createpackages
STRIP_BINARIES=yes

BOOT_BOARD='raspi'

#xorg-autoconf from rizalmart - changes perms on /usr/sbin/xorg-autoconf to enable; default is unset
XAUTOCONF=yes

BUILD_ZIP=yes
# leave MKIMGFLAG= blank to not build an image
MKIMGFLAG=yes
#FMT ext2,3,4, ext4nj (no journal - default), f2fs
FMT=f2fs
#TSIZE is total size of image - default 2000
#TSIZE=4000
#SWAP y/n (default y), pi 1 and zero need swap, if building for 2,3,4 set SWAP=n
#SWAP=n
#IMG_NUM if you want 2 images, one with swap, one without set this to 2
IMG_NUM=2
ADD_GIT_HASH_TO_FILENAME=yes

## Kernel tarballs repo URL for choosing/downloading kernel
KIT_KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

### Kernel tarball URL - avoid being asked questions about downloading/choosing a kernel
KERNEL_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/kit-kernel-5.4.42-raspup.tar.xz
KERNEL7_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/kit-kernel-5.4.42-v7-raspup.tar.xz
KERNEL7L_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/kit-kernel-5.4.42-v7l-raspup.tar.xz

## compression method to be used (SFS files)
#SFSCOMP='-comp xz -Xbcj arm -b 512K'
#SFSCOMP='-comp xz'
SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'

# BUILD_DEVX: yes/no
BUILD_DEVX=yes

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=no

## -- pTheme -- applies only if ptheme pkg is being used
##    woof-code/rootfs-packages/ptheme/usr/share/ptheme/globals
#PTHEME="Dark_Blue"
PTHEME="pi original"

## XERRS_FLG if set to 'yes' enables logging of X errors in /tmp/xerrs.log
## if unset or or any value other than 'yes' X logging is disabled. User can change this in 'Startup Manager'
## For testing builds XERRS_FLG=yes is recommended. If the target device is low RAM suggest to leave this unset, especially for release
#XERRS_FLG=yes

## include Pkg in build (y/n). If commented then asked in 3builddistro
INCLUDE_PKG=y

## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS="
defaultarchiver=
defaultaudioeditor=
defaultaudiomixer=
defaultaudioplayer=
defaultbrowser=midori
defaultcalendar=
defaultcdplayer=
defaultcdrecorder=
defaultchat=
defaultchmviewer=
defaultconnect=
defaultcontact=
defaultdraw=
defaultemail=
defaultfilemanager=
defaulthandler=
defaulthtmleditor=
defaulthtmlviewer=
defaultimageeditor=
defaultimageviewer=imgview
defaultmediaplayer=
defaultpaint=
defaultpdfviewer=
defaultprocessmanager=
defaultrun=
defaultscreenshot=
defaultspreadsheet=
defaultterminal=
defaulttexteditor=
defaulttextviewer=
defaulttorrent=
defaultwordprocessor=
"

## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS="
ln -s arm-linux-gnueabihf/ld-2.24.so lib/ld-linux.so.3
chmod 644 etc/init.d/cups
chmod 644 etc/init.d/javaif.sh
chmod 644 etc/init.d/rc.pcmcia
chmod 644 etc/init.d/rsync
chmod 644 etc/init.d/saned
echo 'Icon=/usr/share/pixmaps/puppy/keyboard.svg' >> usr/share/applications/xvkbd.desktop
sed -i 's%multipart.*%%' usr/share/applications/xarchive.desktop
echo 'NoDisplay=true' >> usr/share/applications/install-chromium.desktop
echo 'NoDisplay=true' >> usr/share/applications/install-firefox.desktop
echo 'NoDisplay=true' >> usr/share/applications/install-vivaldi.desktop
rm -f etc/init.d/x11-common
chmod 755 etc/init.d/rc.dropbear
rm -rf root/puppy-reference/ps*
rm -rf root/puppy-reference/spread*
rm -rf root/puppy-reference/text
rm -rf root/puppy-reference/v*
rm -rf root/puppy-reference/xml
"
