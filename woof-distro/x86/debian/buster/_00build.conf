#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

# 2createpackages
STRIP_BINARIES=no

## UnionFS: aufs or overlay
UNIONFS=aufs

## Kernel tarballs repo URL for choosing/downloading kernel
KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

## Kernel tarball URL - avoid being asked questions about downloading/choosing a kernel
KERNEL_TARBALL_URL=http://smokey01.com/radky/Woof/kernel-4.19.74-buster/huge-4.19.74-buster.tar.bz2

## an array of generically named programs to send to the ADRIVE, FDRIVE, YDRIVE
## ADRV_INC="abiword gnumeric goffice"
ADRV_INC=""
## YDRV_INC=""
YDRV_INC=""
## FDRV_INC="" #this one is very experimental and it's recommended to be left unset
FDRV_INC=""

## Include kernel-kit generated FDRIVE
## set to yes or no or leave commented to be asked the question at build time
#KFDRIVE=no

## build devx? yes/no - any other value = ask
BUILD_DEVX=no

## include devx SFS in ISO?
DEVX_IN_ISO=no

## Include the windows puppy installer LICK by Luke Lorimer aka <noryb009>
LICK_IN_ISO=yes

## compression method to be used (SFS files)
#SFSCOMP='-comp xz -Xbcj x86 -b 512K'
SFSCOMP='-comp xz'
#SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=no

## -- pTheme -- applies only if ptheme pkg is being used
##    woof-code/rootfs-packages/ptheme/usr/share/ptheme/globals
## You can choose a ptheme here if you wish
## otherwise 3builddistro will ask you to choose one
#PTHEME="Dark Touch"
#PTHEME="Dark Mouse"
#PTHEME="Bright Touch"
#PTHEME="Bright Mouse"
#PTHEME="Dark_Blue"
PTHEME="Original Pup"

## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS="
defaultarchiver=pupzip
defaultaudioeditor=mhwaveedit
defaultaudiomixer=gnome-alsamixer
defaultaudioplayer=pmusic
defaultbrowser=palemoon
defaultcalendar=osmo
defaultcdplayer=pmusic_CD
defaultcdrecorder=
defaultchat=hexchat
defaultchmviewer=
defaultconnect=connectwizard
defaultcontact=osmo
defaultdraw=inkscapelite
defaultemail=sylpheed
defaultfilemanager=roxfiler
defaulthandler=
defaulthtmleditor=geany
defaulthtmlviewer=defaultbrowser
defaultimageeditor=mtpaint
defaultimageviewer=gpicview
defaultmediaplayer=gnome-mplayer
defaultpaint=mtpaint
defaultpdfviewer=evince
defaultprocessmanager=lxtask
defaultrun=prun
defaultscreenshot=PupSnap
defaultspreadsheet=gnumeric
defaultterminal=lxterminal
defaulttexteditor=geany
defaulttextviewer=leafpad
defaulttorrent=transmission-gtk
defaultwordprocessor=abiword
"

## -- NON-FREE firmware --
## this downloads and installs to fdrive firmwares that
## may be needed by the kernel drivers (wireless + dvb).
## a yes or no val to NONFREE_FW is needed to automate build
## Note 0: FDRV_INC= must be unset
## Note 1: see the file support/fw.conf for configuration
## Note 2: if you select b43* (any) in the fw.conf then b43-fwcutter
## is downloaded, compiled and installed if you don't already have it
## Note 3: if nouveau=true then a python script 'extract_firmware.py'
## is downloaded along with the full nvidia driver. It may take a while.
## Note 4: you can choose to keep downloaded binaries if you set the
## 'save_dld=true' var in fw.conf. They'll be used next time instead
## of downloading them again.
NONFREE_FW=yes

## -- EXTRA FLAG --
## This allows some customisation for the iso name
## eg: slacko64-6.9.9.1-uefi-k3.16.iso
## where XTRA_FLG='-k3.16' (the dash is a requirement)
#XTRA_FLG=''

## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS="echo 'gtk-icon-theme-name = \"Puppy Standard\"' >> root/.gtkrc-2.0
echo '[Settings]' > etc/gtk-3.0/settings.ini
echo 'gtk-icon-theme-name = Puppy Standard' >> etc/gtk-3.0/settings.ini
echo 'gtk-menu-images = 1' >> etc/gtk-3.0/settings.ini
## ./usr/sbin/globalpmenu -sysroot . set
./usr/sbin/pmime -norox -sysroot . mimedefs
## ./usr/sbin/pmime -sysroot . desktop
## echo -n pcmanfm > etc/desktop_app
## sed -i 's|HOTPLUGON=.*|HOTPLUGON=false|' etc/eventmanager
rm -r usr/lib/xorg/modules/input/kbd_drv.so
rm -r usr/lib/xorg/modules/input/mouse_drv.so
../../../fix-dpup"
