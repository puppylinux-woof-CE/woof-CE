diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/branch.c aufs3-standalone-aufs3.14-git161015/fs/aufs/branch.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/branch.c	2015-10-16 23:17:05.449200304 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/branch.c	2015-10-16 23:18:01.065476090 +0300
@@ -851,7 +851,7 @@ static int test_file_busy(struct super_b
 		/* AuDbg("%pD\n", file); */
 		fi_read_lock(file);
 		bstart = au_fbstart(file);
-		if (!d_is_dir(file->f_path.dentry)) {
+		if (!d_is_directory(file->f_path.dentry)) {
 			hfile = &au_fi(file)->fi_htop;
 			if (hfile->hf_br->br_id == br_id)
 				err = -EBUSY;
@@ -884,7 +884,7 @@ static void br_del_file(struct file **to
 			break;
 
 		/* AuDbg("%pD\n", file); */
-		AuDebugOn(!d_is_dir(file->f_path.dentry));
+		AuDebugOn(!d_is_directory(file->f_path.dentry));
 		bfound = -1;
 		fidir = au_fi(file)->fi_hdir;
 		AuDebugOn(!fidir);
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/cpup.c aufs3-standalone-aufs3.14-git161015/fs/aufs/cpup.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/cpup.c	2015-10-16 23:17:05.449200304 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/cpup.c	2015-10-16 23:18:01.073476129 +0300
@@ -1092,7 +1092,7 @@ static int au_cpup_wh(struct au_cp_gener
 
 	dget(wh_dentry);
 	h_path.dentry = wh_dentry;
-	if (!d_is_dir(wh_dentry)) {
+	if (!d_is_directory(wh_dentry)) {
 		/* no delegation since it is just created */
 		err = vfsub_unlink(h_parent->d_inode, &h_path,
 				   /*delegated*/NULL, /*force*/0);
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/dentry.c aufs3-standalone-aufs3.14-git161015/fs/aufs/dentry.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/dentry.c	2015-10-16 23:17:05.449200304 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/dentry.c	2015-10-16 23:18:01.093476229 +0300
@@ -96,9 +96,9 @@ real_lookup:
 		au_set_dbstart(dentry, bindex);
 	au_set_h_dptr(dentry, bindex, h_dentry);
 
-	if (!d_is_dir(h_dentry)
+	if (!d_is_directory(h_dentry)
 	    || !wh_able
-	    || (d_is_positive(dentry) && !d_is_dir(dentry)))
+	    || (d_is_positive(dentry) && !d_is_directory(dentry)))
 		goto out; /* success */
 
 	mutex_lock_nested(&h_inode->i_mutex, AuLsc_I_CHILD);
@@ -157,7 +157,7 @@ int au_lkup_dentry(struct dentry *dentry
 		goto out;
 
 	inode = dentry->d_inode;
-	isdir = !!d_is_dir(dentry);
+	isdir = !!d_is_directory(dentry);
 	if (!type)
 		au_fset_lkup(args.flags, ALLOW_NEG);
 	dirperm1 = !!au_opt_test(au_mntflags(sb), DIRPERM1);
@@ -178,7 +178,7 @@ int au_lkup_dentry(struct dentry *dentry
 			continue;
 		}
 		h_parent = au_h_dptr(parent, bindex);
-		if (!h_parent || !d_is_dir(h_parent))
+		if (!h_parent || !d_is_directory(h_parent))
 			continue;
 
 		h_dir = h_parent->d_inode;
@@ -527,7 +527,7 @@ static void au_hide(struct dentry *dentr
 	int err;
 
 	AuDbgDentry(dentry);
-	if (d_is_dir(dentry)) {
+	if (d_is_directory(dentry)) {
 		/* shrink_dcache_parent(dentry); */
 		err = au_hide_children(dentry);
 		if (unlikely(err))
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/dir.c aufs3-standalone-aufs3.14-git161015/fs/aufs/dir.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/dir.c	2015-10-16 23:17:05.445200284 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/dir.c	2015-10-16 23:18:01.101476268 +0300
@@ -61,7 +61,7 @@ loff_t au_dir_size(struct file *file, st
 
 	sz = 0;
 	if (file) {
-		AuDebugOn(!d_is_dir(file->f_path.dentry));
+		AuDebugOn(!d_is_directory(file->f_path.dentry));
 
 		bend = au_fbend_dir(file);
 		for (bindex = au_fbstart(file);
@@ -73,7 +73,7 @@ loff_t au_dir_size(struct file *file, st
 		}
 	} else {
 		AuDebugOn(!dentry);
-		AuDebugOn(!d_is_dir(dentry));
+		AuDebugOn(!d_is_directory(dentry));
 
 		bend = au_dbtaildir(dentry);
 		for (bindex = au_dbstart(dentry);
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/inode.c aufs3-standalone-aufs3.14-git161015/fs/aufs/inode.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/inode.c	2015-10-16 23:17:05.449200304 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/inode.c	2015-10-16 23:18:01.133476427 +0300
@@ -352,7 +352,7 @@ struct inode *au_new_inode(struct dentry
 	 * parents.
 	 */
 	mtx = NULL;
-	if (!d_is_dir(h_dentry))
+	if (!d_is_directory(h_dentry))
 		mtx = &au_sbr(sb, bstart)->br_xino.xi_nondir_mtx;
 
 new_ino:
@@ -383,7 +383,7 @@ new_ino:
 		if (unlikely(d_is_symlink(h_dentry)))
 			au_rw_class(&au_ii(inode)->ii_rwsem,
 				    au_lc_key + AuLcSymlink_IIINFO);
-		else if (unlikely(d_is_dir(h_dentry)))
+		else if (unlikely(d_is_directory(h_dentry)))
 			au_rw_class(&au_ii(inode)->ii_rwsem,
 				    au_lc_key + AuLcDir_IIINFO);
 		else /* likely */
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/i_op.c aufs3-standalone-aufs3.14-git161015/fs/aufs/i_op.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/i_op.c	2015-10-16 23:17:05.449200304 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/i_op.c	2015-10-16 23:18:01.149476506 +0300
@@ -776,7 +776,7 @@ int au_pin_and_icpup(struct dentry *dent
 		.flags		= 0
 	};
 
-	if (d_is_dir(dentry))
+	if (d_is_directory(dentry))
 		au_fset_wrdir(wr_dir_args.flags, ISDIR);
 	/* plink or hi_wh() case */
 	bstart = au_dbstart(dentry);
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/i_op_del.c aufs3-standalone-aufs3.14-git161015/fs/aufs/i_op_del.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/i_op_del.c	2015-10-16 23:17:05.449200304 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/i_op_del.c	2015-10-16 23:18:01.153476526 +0300
@@ -322,7 +322,7 @@ int aufs_unlink(struct inode *dir, struc
 	inode = dentry->d_inode;
 	IMustLock(inode);
 	err = -EISDIR;
-	if (unlikely(d_is_dir(dentry)))
+	if (unlikely(d_is_directory(dentry)))
 		goto out_unlock; /* possible? */
 
 	bstart = au_dbstart(dentry);
@@ -423,7 +423,7 @@ int aufs_rmdir(struct inode *dir, struct
 	inode = dentry->d_inode;
 	IMustLock(inode);
 	err = -ENOTDIR;
-	if (unlikely(!d_is_dir(dentry)))
+	if (unlikely(!d_is_directory(dentry)))
 		goto out_unlock; /* possible? */
 
 	err = -ENOMEM;
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/i_op_ren.c aufs3-standalone-aufs3.14-git161015/fs/aufs/i_op_ren.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/i_op_ren.c	2015-10-16 23:17:05.445200284 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/i_op_ren.c	2015-10-16 23:18:01.157476546 +0300
@@ -835,10 +835,10 @@ int aufs_rename(struct inode *_src_dir,
 
 	err = -ENOTDIR;
 	flags = AuLock_FLUSH | AuLock_NOPLM | AuLock_GEN;
-	if (d_is_dir(a->src_dentry)) {
+	if (d_is_directory(a->src_dentry)) {
 		au_fset_ren(a->flags, ISDIR);
 		if (unlikely(d_is_positive(a->dst_dentry)
-			     && !d_is_dir(a->dst_dentry)))
+			     && !d_is_directory(a->dst_dentry)))
 			goto out_free;
 		err = aufs_read_and_write_lock2(a->dst_dentry, a->src_dentry,
 						AuLock_DIR | flags);
diff -rup aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/whout.c aufs3-standalone-aufs3.14-git161015/fs/aufs/whout.c
--- aufs3-standalone-aufs3.14-git161015-orig/fs/aufs/whout.c	2015-10-16 23:17:05.449200304 +0300
+++ aufs3-standalone-aufs3.14-git161015/fs/aufs/whout.c	2015-10-16 23:18:01.233476923 +0300
@@ -319,7 +319,7 @@ static int au_whdir(struct inode *h_dir,
 		if (au_test_nfs(path->dentry->d_sb))
 			mode |= S_IXUGO;
 		err = vfsub_mkdir(h_dir, path, mode);
-	} else if (d_is_dir(path->dentry))
+	} else if (d_is_directory(path->dentry))
 		err = 0;
 	else
 		pr_err("unknown %pd exists\n", path->dentry);
