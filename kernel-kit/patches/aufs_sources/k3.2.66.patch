diff -Naur a/fs/aufs/dcsub.c b/fs/aufs/dcsub.c
--- a/fs/aufs/dcsub.c	2018-06-02 07:51:13.225081462 -0400
+++ b/fs/aufs/dcsub.c	2018-06-02 07:54:31.284008485 -0400
@@ -134,7 +134,7 @@
 	while (next != &this_parent->d_subdirs) {
 		struct list_head *tmp = next;
 		struct dentry *dentry = list_entry(tmp, struct dentry,
-						   d_u.d_child);
+						   d_child);
 
 		next = tmp->next;
 		spin_lock_nested(&dentry->d_lock, DENTRY_D_LOCK_NESTED);
@@ -170,7 +170,7 @@
 		this_parent = tmp;
 		spin_lock(&this_parent->d_lock);
 		rcu_read_unlock();
-		next = child->d_u.d_child.next;
+		next = child->d_child.next;
 		goto resume;
 	}
 
diff -Naur a/fs/aufs/debug.c b/fs/aufs/debug.c
--- a/fs/aufs/debug.c	2018-06-02 07:51:13.211748201 -0400
+++ b/fs/aufs/debug.c	2018-06-02 07:55:43.333618159 -0400
@@ -170,7 +170,7 @@
 	struct dentry *d;
 
 	spin_lock(&inode->i_lock);
-	list_for_each_entry(d, &inode->i_dentry, d_alias)
+	list_for_each_entry(d, &inode->i_dentry, d_u.d_alias)
 		au_dpri_dentry(d);
 	spin_unlock(&inode->i_lock);
 }
diff -Naur a/fs/aufs/export.c b/fs/aufs/export.c
--- a/fs/aufs/export.c	2018-06-02 07:51:13.271747876 -0400
+++ b/fs/aufs/export.c	2018-06-02 07:56:52.143245385 -0400
@@ -243,7 +243,7 @@
 		dentry = d_find_alias(inode);
 	else {
 		spin_lock(&inode->i_lock);
-		list_for_each_entry(d, &inode->i_dentry, d_alias) {
+		list_for_each_entry(d, &inode->i_dentry, d_u.d_alias) {
 			spin_lock(&d->d_lock);
 			if (!au_test_anon(d)
 			    && d->d_parent->d_inode->i_ino == dir_ino) {
diff -Naur a/fs/aufs/hnotify.c b/fs/aufs/hnotify.c
--- a/fs/aufs/hnotify.c	2018-06-02 07:51:13.238414724 -0400
+++ b/fs/aufs/hnotify.c	2018-06-02 08:02:35.398052481 -0400
@@ -212,7 +212,7 @@
 		AuDebugOn(!name);
 		au_iigen_dec(inode);
 		spin_lock(&inode->i_lock);
-		list_for_each_entry(d, &inode->i_dentry, d_alias) {
+		list_for_each_entry(d, &inode->i_dentry, d_u.d_alias) {
 			spin_lock(&d->d_lock);
 			dname = &d->d_name;
 			if (dname->len != nlen
@@ -378,7 +378,7 @@
 
 	dentry = NULL;
 	spin_lock(&parent->d_lock);
-	list_for_each_entry(d, &parent->d_subdirs, d_u.d_child) {
+	list_for_each_entry(d, &parent->d_subdirs, d_child) {
 		/* AuDbg("%.*s\n", AuDLNPair(d)); */
 		spin_lock_nested(&d->d_lock, DENTRY_D_LOCK_NESTED);
 		dname = &d->d_name;
