#######################################
#                                     #
#              KERNEL-KIT             #
#                                     #
#######################################      

version 0.1.4

gpl3, see /usr/share/doc/legal

THIS KIT COMES WITH ABSOLUTELY NO WARRANTY, USE ENTIRELY AT OWN RISK
NO RESPONSIBILITY ACCEPTED. YOU HAVE BEEN WARNED

ABOUT
-----
This kit is designed to make it easy to compile a kernel for Puppy Linux.
The packages produced are compatible with Woof/Woof2. 
See Barry's Blog .. bkhome.org/blog
This kit assumes you are comfortable with shell scripts and command line usage.


DEPENDENCIES
------------
This kit is designed for Puppy Linux. A late model build is 
recommended, such as Wary, Racy, Slacko, Precise, Dpup-Exprimo.
Be aware that for best results you should compile in a host 
distro which is compatible with the target distro.

REQUIRED:
gcc - for compilation
git - for aufs sources
mksquashfs - for compressing the kernel source sfs, will build without

CREDIT
------
Much credit has to go to BarryK, for inventing Puppy Linux,
Iguleder, the original designer of this kit, pemasu for input and bugfixes,
and various testers on the Murga-Linux/puppy forum

USAGE
-----

IMPORTANT: You must not use this inside a save file! The kernel 
needs plenty of space to compile. There is no check for this
so it is up to you.

First, edit the build.conf file for your preferences
You will certainly need to change the $kernel_version variable
You can put in a custom mirror.
It is recommended to use a $custom_suffix and $package_name_suffix
There are custom kernel DOTconfigs in configs_extra directory. The script
offers you a choice from those, or your own custom DOTconfig
or the default DOTconfig. Default IS NOT recommended.
Move your custom DOTconfigXXX top level and rename it to 
"DOTconfig" if you wish (YMMV).

Patches:
If you have any custom patches, stick them in the patches directory. They 
will be included in the build.

Second, run "./build.sh"
It does a quick dependency check.
You will be given a list of kernel configuration files. Choose one
close to your chosen kernel version or hit "z" for your own.
The kernel source will download, aufs will be downloaded from git
The patches will be applied automatically and halt the script if 
there are failures.
The script will pause once all patches are applied so you 
can configure the kernel.
You can use:
1) make menuconfig (ncurses based)
2) make gconfig (gtk based)
3) make xconfig (qt based, depends on nokia qt libraries)

Save it when done and continue.

Kernel headers are created, kernel compiles (takes a long time), kernel
source sfs is created, kernel pet package is NOT created BUT the 
correct directory structure is in place at dist/packages/linux_kernel*
to make a pet easily. Same with headers. 

Have fun!

-------------------------------------------------------------------------------

01micko @ http://www.murga-linux.com/puppy Puppy Linux forum

Changelog
---------
16-11-13 v0.1.4
updated to support 3.10 kernels
added 3.10.19 kernel config
bugfix for building aufs-utils
added ability to set flag for jobs
added flag for unstable aufs for RC kernels

31-03-13 v0.1.3
added link to version.h - pemasu
added extra location for aufs.h - pemasu
added ability to compile aufs-utils from git - 01micko
added axtra configs for k3.8xx
